<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>单元测试 on 为霜的博客</title>
    <link>https://blog.jiyi27.com/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
    <description>Recent content in 单元测试 on 为霜的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 05 Sep 2023 15:10:18 +0000</lastBuildDate><atom:link href="https://blog.jiyi27.com/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unit Test Basic Commands - Go</title>
      <link>https://blog.jiyi27.com/posts/golang/advance/005-unit-test-commands/</link>
      <pubDate>Tue, 05 Sep 2023 15:10:18 +0000</pubDate>
      
      <guid>https://blog.jiyi27.com/posts/golang/advance/005-unit-test-commands/</guid>
      <description>&lt;h2 id=&#34;1-useful-commands&#34;&gt;1. Useful commands&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ go test -run &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ExampleSession|TestSession&amp;#34;&lt;/span&gt; -v
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Note that the &lt;code&gt;-run&lt;/code&gt; flag is used for specifying test functions, &lt;strong&gt;not&lt;/strong&gt; benchmarks, &lt;strong&gt;not&lt;/strong&gt; fuzz test. Because example test is similar to test function, you can specify both example and test function with &lt;code&gt;-run&lt;/code&gt; flag. If you want to specify benchmarks, use &lt;code&gt;-bench&lt;/code&gt; flag:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-bench regexp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	Run benchmarks matching the regular expression.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-run regexp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	Run only tests and examples matching the regular expression.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Flags below can be used with flags above.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-race
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	enable data race detection.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-cover
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	enable code coverage instrumentation.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Note that &lt;code&gt;-bench&lt;/code&gt; does not disable the normal &lt;code&gt;test&lt;/code&gt; selection. If you want run the benchmark test &lt;strong&gt;only&lt;/strong&gt; you should pass &lt;code&gt;-run=xxx&lt;/code&gt; to disable the normal test selection.&lt;/p&gt;</description>
      <content>&lt;h2 id=&#34;1-useful-commands&#34;&gt;1. Useful commands&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ go test -run &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ExampleSession|TestSession&amp;#34;&lt;/span&gt; -v
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Note that the &lt;code&gt;-run&lt;/code&gt; flag is used for specifying test functions, &lt;strong&gt;not&lt;/strong&gt; benchmarks, &lt;strong&gt;not&lt;/strong&gt; fuzz test. Because example test is similar to test function, you can specify both example and test function with &lt;code&gt;-run&lt;/code&gt; flag. If you want to specify benchmarks, use &lt;code&gt;-bench&lt;/code&gt; flag:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-bench regexp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	Run benchmarks matching the regular expression.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-run regexp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	Run only tests and examples matching the regular expression.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Flags below can be used with flags above.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-race
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	enable data race detection.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-cover
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	enable code coverage instrumentation.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Note that &lt;code&gt;-bench&lt;/code&gt; does not disable the normal &lt;code&gt;test&lt;/code&gt; selection. If you want run the benchmark test &lt;strong&gt;only&lt;/strong&gt; you should pass &lt;code&gt;-run=xxx&lt;/code&gt; to disable the normal test selection.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go test -run&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xxx -bench &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BenchmarkDirectRead|BenchmarkLimitedRead&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# just one function, no single quote is fine: &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ go test -run&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xxx -bench BenchmarkStore
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Learn more: &lt;a href=&#34;https://pkg.go.dev/cmd/go#hdr-Testing_flags&#34;&gt;go command - cmd/go - Go Packages&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;2--bench---benchmem&#34;&gt;2. &lt;code&gt;-bench&lt;/code&gt; &amp;amp; &lt;code&gt;-benchmem&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The benchmark tool only reports heap allocations. Stack allocations via escape analysis are less costly, possibly free, so are not reported.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;❯ go test -run&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xxx -bench &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BenchmarkDirectRead|BenchmarkLimitedRead&amp;#39;&lt;/span&gt; -benchmem
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BenchmarkDirectRead-8    &lt;span style=&#34;color:#ae81ff&#34;&gt;38036484&lt;/span&gt;       31.47 ns/op      &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt; B/op      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; allocs/op
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BenchmarkLimitedRead-8      &lt;span style=&#34;color:#ae81ff&#34;&gt;12315&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;97480&lt;/span&gt; ns/op      &lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt; B/op      &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; allocs/op
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;-8&lt;/code&gt; indicates that these benchmarks were run with a GOMAXPROCS value of 8, meaning up to 8 OS threads were used concurrently. This is typically set to the number of CPU cores available.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;38036484`` for BenchmarkDirectRead and &lt;/code&gt;12315`` for BenchmarkLimitedRead are the number of iterations the benchmark function was executed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;48 B/op&lt;/code&gt;: This means that on average, 48 bytes are being allocated per operation (op) in the benchmarked function.&lt;/p&gt;
&lt;p&gt;Source:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/56832207/golang-benchmark-why-does-allocs-op-show-0-b-op&#34;&gt;https://stackoverflow.com/questions/56832207/golang-benchmark-why-does-allocs-op-show-0-b-op&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/a/35588683/16317008&#34;&gt;https://stackoverflow.com/a/35588683/16317008&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>
