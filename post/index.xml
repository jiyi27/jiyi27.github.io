<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on David&#39;s Blog</title>
    <link>https://davidzhu.xyz/post/</link>
    <description>Recent content in Posts on David&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 06 Apr 2024 18:28:22 +0000</lastBuildDate>
    <atom:link href="https://davidzhu.xyz/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cloudflare R2</title>
      <link>https://davidzhu.xyz/post/build-website/011-cf-r2/</link>
      <pubDate>Sat, 06 Apr 2024 18:28:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/build-website/011-cf-r2/</guid>
      <description>R2 vs S3 Cloudflare R2 vs AWS S3 | Review Pricing &amp;amp; Features | Cloudflare Install mc (MinIO Client) 1 2 3 4 # just install minio client not minio server brew install minio/stable/mc mc alias set r2 R2-URL AccessKey SecretKey The MinIO client provides identical commands to Unix file management commands, such as cp and ls, but is designed for both local and remote storage systems. It’</description>
    </item>
    <item>
      <title>MongoDB Get Started</title>
      <link>https://davidzhu.xyz/post/database/mongodb/000-get-started/</link>
      <pubDate>Sat, 30 Mar 2024 19:27:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/mongodb/000-get-started/</guid>
      <description>Install MongoDB Install MongoDB Community Edition on macOS — MongoDB Manual Start MongoDB 1 brew services start mongodb-community MongoDB Shell 1 ❯ mongosh Common Commands 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 // 创建或者切换数据库 use myDatabase // 显示当前数据库 db //</description>
    </item>
    <item>
      <title>Wget Connecting Timeout Issue</title>
      <link>https://davidzhu.xyz/post/build-website/010-wget-connecting-timeout/</link>
      <pubDate>Fri, 29 Mar 2024 20:28:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/build-website/010-wget-connecting-timeout/</guid>
      <description>1. Issue When I use wget to download some files, I got the following error:&#xA;1 2 $sh -c &amp;#34;$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)&amp;#34; Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|2606:50c0:8002::154|:443... You can use curl to replace wget, or you can get the ip address of the domain and add it to /etc/hosts file.&#xA;1 185.199.108.133 raw.githubusercontent.com You can find the ip address with dig/ping command or on the some online tool website. ping probably won&amp;rsquo;t work.</description>
    </item>
    <item>
      <title>Tricks &amp; Mistakes in Javascript</title>
      <link>https://davidzhu.xyz/post/js/basics/001-tricks-mistakes/</link>
      <pubDate>Tue, 12 Mar 2024 10:55:20 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/js/basics/001-tricks-mistakes/</guid>
      <description>1. Minor tricks 1.1. array It is useful to remember which operations on arrays mutate them, and which don’t. For example, push, pop, reverse, and sort will mutate the original array, but slice, filter, and map will create a new one. filter() creates a shallow copy of a portion of a given array. 1 2 3 4 5 6 7 8 if (isEmpty) { postList</description>
    </item>
    <item>
      <title>HTML Basics</title>
      <link>https://davidzhu.xyz/post/frontend/000-html-js/</link>
      <pubDate>Thu, 07 Mar 2024 20:02:10 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/frontend/000-html-js/</guid>
      <description>e.preventDefault() 1 2 3 4 5 6 7 8 9 10 11 function sendMessage(e) { e.preventDefault() // Submitting form would refresh the page, so we prevent page reload const input = document.querySelector(&amp;#39;input&amp;#39;) if (input.value) { ws.send(input.value) input.value = &amp;#34;&amp;#34; } input.focus() // Focus the input after sending the message } document.querySelector(&amp;#39;form&amp;#39;).addEventListener(&amp;#39;submit&amp;#39;, sendMessage) Usually used to prevent page reload when submit form.&#xA;defer attribute of &amp;lt;script&amp;gt; 1 2 3 4 5 6 7 &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Chat APP&amp;lt;/title&amp;gt; &amp;lt;script defer src=&amp;#34;js/app.</description>
    </item>
    <item>
      <title>Nodejs Intro</title>
      <link>https://davidzhu.xyz/post/js/nodejs/nodejs-introduction/</link>
      <pubDate>Thu, 07 Mar 2024 14:06:27 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/js/nodejs/nodejs-introduction/</guid>
      <description>1 2 3 4 5 6 7 8 9 # make sure npm and node.js are install npm -v node -v # create folder and init node.js project mkdir ws-chat &amp;amp;&amp;amp; cd ws-chat npm init # execute js file touch index.js node xxx.js # or use &amp;#39;npm start&amp;#39; predefined in package.json 1. Intro Node. js is not a programming language. Rather, it&amp;rsquo;s a runtime environment that&amp;rsquo;s used to run JavaScript outside the browser.</description>
    </item>
    <item>
      <title>Event Loop in Browser</title>
      <link>https://davidzhu.xyz/post/js/000-event-loop/</link>
      <pubDate>Sat, 27 Jan 2024 22:54:02 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/js/000-event-loop/</guid>
      <description>浏览器 JS 异步执行的原理 JS 是单线程的，也就是同一个时刻只能做一件事情，为什么浏览器可以同时执行异步任务呢？ 因为浏览器是多线程的，当 JS 需要执行异</description>
    </item>
    <item>
      <title>Loop Invariant</title>
      <link>https://davidzhu.xyz/post/cs-basics/000-loop-invariant/</link>
      <pubDate>Fri, 19 Jan 2024 20:32:25 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/cs-basics/000-loop-invariant/</guid>
      <description>Definition In simple words, a loop invariant is some predicate (condition) that holds for every iteration of the loop. For example, let&amp;rsquo;s look at a simple for loop that looks like this: 1 2 3 int j = 9; for(int i=0; i&amp;lt;10; i++) j--; In this example it is true (for every iteration) that i + j == 9. A weaker invariant that is also true is that i &amp;gt;=</description>
    </item>
    <item>
      <title>Ptotocol Buffers</title>
      <link>https://davidzhu.xyz/post/golang/grpc/002-proto-buffer/</link>
      <pubDate>Fri, 19 Jan 2024 00:01:08 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/grpc/002-proto-buffer/</guid>
      <description>Quick start Execute the following commands at your terminal, you don&amp;rsquo;t need to execute them under your project folder, just execute them anywhere, it will install the protoc compiler and the protoc-gen-go and protoc-gen-go-grpc plugins into your $GOPATH/bin folder. 1 2 3 4 5 6 7 # install protoc compiler $ brew install protobuf $ protoc --version # Ensure compiler version is 3+ # install plugins to $GOPATH/bin $ go</description>
    </item>
    <item>
      <title>Go Modules and Environment</title>
      <link>https://davidzhu.xyz/post/golang/basics/000-modules-env/</link>
      <pubDate>Thu, 18 Jan 2024 22:12:20 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/000-modules-env/</guid>
      <description>go build vs go install The go install command builds and installs the packages named by the paths on the command line. Executables (main packages) are installed to the directory named by the GOBIN environment variable, which defaults to $GOPATH/bin or $HOME/go/bin if the GOPATH environment variable is not set.&#xA;The go install command behaves almost identically to go build, but instead of leaving the executable in the current directory, or a directory specified by the -o flag, it places the executable into the $GOPATH/bin directory.</description>
    </item>
    <item>
      <title>Practice of MySQL</title>
      <link>https://davidzhu.xyz/post/database/mysql/001-practice/</link>
      <pubDate>Wed, 10 Jan 2024 23:06:36 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/mysql/001-practice/</guid>
      <description>Store string The most commonly used string data types in the context of databases are CHAR and VARCHAR. TEXT and LONGTEXT are also commonly used string data types. char(10) vs varchar(10) When you define a column as CHAR(10), it will always occupy 10 characters of storage, regardless of the actual data length. If you store a string shorter than 10 characters, it will be padded with spaces to fill up</description>
    </item>
    <item>
      <title>Basic MySQL</title>
      <link>https://davidzhu.xyz/post/database/mysql/002-basic-sql/</link>
      <pubDate>Wed, 10 Jan 2024 11:51:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/mysql/002-basic-sql/</guid>
      <description>Denormalization Normalization 首先，了解什么是 Normalization 很重要。在关系型数据库设计中，Normalization 是一个组织数据的过程，目的是减少数据冗余和提高数据完整性。它涉</description>
    </item>
    <item>
      <title>MongoDB in Action Reading Note</title>
      <link>https://davidzhu.xyz/post/database/mongodb/002-mongodb-in-action/</link>
      <pubDate>Mon, 08 Jan 2024 17:38:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/mongodb/002-mongodb-in-action/</guid>
      <description>Basic Theory MongoDB stores its information in documents rather than rows. Where relational databases have tables, MongoDB has collections. Every MongoDB document requires an _id, and if one isn’t present when the document is created, a special MongoDB ObjectID will be generated and added to the document at that time. You can set your own _id by setting it in the document you insert, the ObjectID</description>
    </item>
    <item>
      <title>MongoDB Docs</title>
      <link>https://davidzhu.xyz/post/database/mongodb/000-mongodb-practice/</link>
      <pubDate>Mon, 08 Jan 2024 08:38:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/mongodb/000-mongodb-practice/</guid>
      <description>1 2 // return the old document, with {new: true} return the updated document. Model.findByIdAndUpdate() Query 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 { &amp;#34;address&amp;#34;: { &amp;#34;building&amp;#34;: &amp;#34;1007&amp;#34;, &amp;#34;coord&amp;#34;: [ -73.856077, 40.848447 ], &amp;#34;street&amp;#34;: &amp;#34;Morris Park Ave&amp;#34;, &amp;#34;zipcode&amp;#34;: &amp;#34;10462&amp;#34; }, &amp;#34;borough&amp;#34;: &amp;#34;Bronx&amp;#34;, &amp;#34;cuisine&amp;#34;: &amp;#34;Bakery&amp;#34;, &amp;#34;grades&amp;#34;: [ { &amp;#34;date&amp;#34;: { &amp;#34;$date&amp;#34;: 1393804800000 }, &amp;#34;grade&amp;#34;: &amp;#34;A&amp;#34;, &amp;#34;score&amp;#34;: 2 }, {</description>
    </item>
    <item>
      <title>Rendering - React</title>
      <link>https://davidzhu.xyz/post/frontend/react/004-rendering/</link>
      <pubDate>Sun, 07 Jan 2024 19:27:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/frontend/react/004-rendering/</guid>
      <description>setState 同步 OR 异步 我们首先需要明确, 从 API 层面上说, 它就是普通的调用执行的函数, 自然是同步的. 这里所说的同步和异步指的是 API 调用后更新 DOM 是同步还是异步</description>
    </item>
    <item>
      <title>Pure Function &amp; State &amp; Event Loop - React</title>
      <link>https://davidzhu.xyz/post/frontend/react/003-pure-func-event-loop/</link>
      <pubDate>Sun, 07 Jan 2024 10:27:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/frontend/react/003-pure-func-event-loop/</guid>
      <description>State When you call useState, you are telling React that you want this component to remember something: 1 const [index, setIndex] = useState(0); In this case, you want React to remember index. State is tied to a position in the render tree: When you give a component state, you might think the state “lives” inside the component. But the state is actually held inside</description>
    </item>
    <item>
      <title>Tailwind CSS Tricks</title>
      <link>https://davidzhu.xyz/post/frontend/002-tailwind-css-tricks/</link>
      <pubDate>Sat, 06 Jan 2024 22:35:10 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/frontend/002-tailwind-css-tricks/</guid>
      <description>1. flex-none 由于 flex items 三属性 flex-grow, flex-shrink, flex-basis 的默认值分别是 0, 1, auto, 即 flex items 默认允许在必要情况下缩小, 比如有左右两个 flex items, 当左边的 flex items 的内容很多, 而右边的 flex items 的内容很少</description>
    </item>
    <item>
      <title>Tailwind CSS Flex</title>
      <link>https://davidzhu.xyz/post/frontend/000-css-basic/</link>
      <pubDate>Sat, 06 Jan 2024 20:46:20 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/frontend/000-css-basic/</guid>
      <description>Block and Inline block 元素独占一行, 宽度默认是父元素的 100%, 高度由内容决定 特殊情况: button 默认是 inline-block, 支持设置宽高, 即使把 button 的 display 设置为 block, 其宽度依然不会是父元素的 100%, 而是</description>
    </item>
    <item>
      <title>Tailwind CSS Commonly Used Class</title>
      <link>https://davidzhu.xyz/post/frontend/001-tailwindcsss-class/</link>
      <pubDate>Sat, 06 Jan 2024 12:46:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/frontend/001-tailwindcsss-class/</guid>
      <description>1. Main axis and cross axis - Flex 1 2 3 4 5 6 7 &amp;lt;div className=&amp;#34;flex flex-col&amp;#34;&amp;gt; ... &amp;lt;/div&amp;gt; &amp;lt;div className=&amp;#34;flex flex-row&amp;#34;&amp;gt; ... &amp;lt;/div&amp;gt; 为什么使用 class=&amp;ldquo;flex flex-row&amp;rdquo; 只是用 class=&amp;ldquo;flex-row&amp;rdquo; 不行吗? flex 确保元素变成一个 Flex 容器。flex-row 确保该容器内的项目</description>
    </item>
    <item>
      <title>Design of Database Schema</title>
      <link>https://davidzhu.xyz/post/database/001-design-schema/</link>
      <pubDate>Thu, 04 Jan 2024 17:51:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/001-design-schema/</guid>
      <description>1. Post Schema 1.1. Likes Field The limit of the document in MongoDB is 16mb, which is pretty huge. Unless you&amp;rsquo;re trying to create the next Facebook, putting the IDs in the array won&amp;rsquo;t be an issue. I have production workflows with 10k+ IDs in a single document array, have no issues. source</description>
    </item>
    <item>
      <title>MongoDB Aggregate</title>
      <link>https://davidzhu.xyz/post/database/mongodb/001-aggregate-mongodb/</link>
      <pubDate>Thu, 04 Jan 2024 17:51:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/mongodb/001-aggregate-mongodb/</guid>
      <description>Aggregate framework The aggregation framework is MongoDB’s advanced query language, and it allows you to transform and combine data from multiple documents to generate new information not available in any single document.&#xA;Common aggregation stages Below is a list of common MongoDB aggregation pipeline stages and their typical order:&#xA;$match Stage&#xA;Usually at the beginning of the pipeline. Filters the documents as early as possible, which reduces the amount of data processed by subsequent stages.</description>
    </item>
    <item>
      <title>Nginx</title>
      <link>https://davidzhu.xyz/post/build-website/007-nginx/</link>
      <pubDate>Sat, 30 Dec 2023 14:01:50 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/build-website/007-nginx/</guid>
      <description>1. Common used commands 1 2 3 4 5 6 $apt install nginx # ubuntu $apk add nginx # Alpine Linux # start $sudo systemctl start/stop/restart/status nginx $sudo service nginx start/stop/restart/status 2. Basic configurations 2.1. Configuration file 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 $vi /etc/nginx/http.d/default.conf # Alpine Linux server { listen 2087 ssl; server_name shaowenzhu.top www.shaowenzhu.top; ssl_certificate /root/tls/cert.pem; ssl_certificate_key /root/tls/cert.key; location / { root /var/www/html; try_files $uri $uri/ /index.</description>
    </item>
    <item>
      <title>拍照构图技巧</title>
      <link>https://davidzhu.xyz/post/other/009-photography/</link>
      <pubDate>Wed, 20 Dec 2023 22:50:37 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/other/009-photography/</guid>
      <description>1. 对角线构图 动景比较适合, 比如沙滩的海浪, 海上一群海鸥连成线, (PS. 下面这张是网图 另外也有对称线构图, 也可以找其他物体衬托, 主要看感觉, 2. 留白构</description>
    </item>
    <item>
      <title>Vite &amp; Deployment - React</title>
      <link>https://davidzhu.xyz/post/frontend/react/001-vite-deploy/</link>
      <pubDate>Wed, 20 Dec 2023 19:44:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/frontend/react/001-vite-deploy/</guid>
      <description>1. Create project with Vite 1 2 3 4 npm create vite@latest name-of-your-project -- --template react cd &amp;lt;your new project directory&amp;gt; npm install react-router-dom localforage match-sorter sort-by npm run dev/npm run build The Proxy in vite.config.js just works for development mode. In production mode it doesn&amp;rsquo;t work.&#xA;The production mode means you run npm run build which will generate a dist folder. Then you can deploy that folder into your server.</description>
    </item>
    <item>
      <title>Error Handling Javascript</title>
      <link>https://davidzhu.xyz/post/js/basics/002-error-handling/</link>
      <pubDate>Sun, 17 Dec 2023 23:30:29 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/js/basics/002-error-handling/</guid>
      <description>1. Error handling with promise objects 1.1. Rejection handler In JavaScript, when a promise is rejected, the control is passed to the nearest rejection handler. This is typically managed through .catch() blocks or through the rejection parameter in .then() method.&#xA;The error will be catght by the rejection parameter of the then() method: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 const promise1 = new Promise((resolve, reject) =&amp;gt; { setTimeout(() =&amp;gt; { reject(&amp;#39;Error in promise1&amp;#39;); }, 1000); }); const promise2 = promise1.</description>
    </item>
    <item>
      <title>Google Cloud Get Started</title>
      <link>https://davidzhu.xyz/post/build-website/009-google-cloud/</link>
      <pubDate>Fri, 15 Dec 2023 11:28:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/build-website/009-google-cloud/</guid>
      <description>Google Cloud Page: https://console.cloud.google.com/welcome/new?organizationId=0&#xA;Select your project or create a new one, then enable some APIs &amp;amp; Services for this project:&#xA;I selected a already existed project Gemini-Test, now you can see its details as below:&#xA;Check enabled API &amp;amp; Services, you can click the enabled one then disable it:&#xA;Or you can search some new APIs &amp;amp; Services and eanble it:</description>
    </item>
    <item>
      <title>Interfaces Basics - Go</title>
      <link>https://davidzhu.xyz/post/golang/basics/005-interfaces/</link>
      <pubDate>Thu, 07 Dec 2023 15:12:32 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/005-interfaces/</guid>
      <description>1. Type Admin isn&amp;rsquo;t *Adimin I found an interesting question on stackoverflow, this is the code:&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 type User interface { Name() string SetName(name string) } type Admin struct { name string } func (a *Admin) Name() string { return a.name } func (a *Admin) SetName(name string) { a.name = name } OP tries to copy user1&amp;rsquo;s value below:</description>
    </item>
    <item>
      <title>Value, Variable and Types - Go</title>
      <link>https://davidzhu.xyz/post/golang/basics/001-basics-go/</link>
      <pubDate>Thu, 07 Dec 2023 10:00:20 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/001-basics-go/</guid>
      <description>You should learn how to read the documentation provided Go, it&amp;rsquo;s very important:&#xA;1. static language Go is statically typed. Every variable has only one static type, that is, exactly one type known and fixed at compile time: int, float32, *MyType, []byte, and so on. If we declare&#xA;1 2 3 4 type MyInt int var i int var j MyInt then i has type int and j has type MyInt.</description>
    </item>
    <item>
      <title>map - Go</title>
      <link>https://davidzhu.xyz/post/golang/basics/003-map/</link>
      <pubDate>Wed, 06 Dec 2023 23:43:50 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/003-map/</guid>
      <description>1. Basic concepts A map value is a pointer to a runtime.hmap structure, when you write the statement:&#xA;1 m := make(map[int]int) The compiler replaces it with a call to runtime.makemap, which has the signature&#xA;1 2 3 4 5 6 // makemap implements a Go map creation make(map[k]v, hint) // If the compiler has determined that the map or the first bucket // can be created on the stack, h and/or bucket may be non-nil.</description>
    </item>
    <item>
      <title>slice &amp; array - Go</title>
      <link>https://davidzhu.xyz/post/golang/basics/003-array-slice/</link>
      <pubDate>Wed, 06 Dec 2023 23:40:59 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/003-array-slice/</guid>
      <description>1. Array An array&amp;rsquo;s length is part of its type, so arrays cannot be resized. Its length is part of its type ([4]int and [5]int are distinct, incompatible types).&#xA;Go’s arrays are values. An array variable denotes the entire array; it is not a pointer to the first array element (as would be the case in C). This means that when you assign or pass around an array value you will make a copy of its contents.</description>
    </item>
    <item>
      <title>IO in Golang</title>
      <link>https://davidzhu.xyz/post/golang/basics/006-io/</link>
      <pubDate>Mon, 04 Dec 2023 14:25:04 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/006-io/</guid>
      <description>1. os.Open() loads entire file into memory? No, the os.Open() function in Golang does not load the entire file into RAM by default. It returns a file descriptor that allows you to read or write data from or to the file.&#xA;I found this answer talks about the open() sys call Linux on StackOverflow, which may give you hints on how os.Open() works:&#xA;No, a file is not automatically read into memory by opening it.</description>
    </item>
    <item>
      <title>Common Mistakes and Tricks Python</title>
      <link>https://davidzhu.xyz/post/python/practice/004-common-mistakes-tricks/</link>
      <pubDate>Sun, 03 Dec 2023 09:01:25 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/python/practice/004-common-mistakes-tricks/</guid>
      <description>1. Slicing makes shallow copy of a list I have talked this nature of slicing in previous post, currently I came across a weird behavior when improt a variable from another package.&#xA;messag.py:&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 messages = [] def with_user(msg: str) -&amp;gt; None: messages.append(msg) def trim_last_two_messages() -&amp;gt; None: global messages print(&amp;#34;in trim func, before trim, len of messages:&amp;#34; + str(len(messages))) if len(messages) &amp;gt; 2: messages = messages[:-2] print(&amp;#34;in trim func, after trim, len of messages:&amp;#34; + str(len(messages))) if __name__ == &amp;#34;__main__&amp;#34;: pass main.</description>
    </item>
    <item>
      <title>Go File Server Cannot Handle Large Files</title>
      <link>https://davidzhu.xyz/post/bugs/009-go-server-handle-large-file/</link>
      <pubDate>Thu, 30 Nov 2023 21:43:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/bugs/009-go-server-handle-large-file/</guid>
      <description>1. Problem description I&amp;rsquo;ve discussed how to use Cloudflare as a reverse proxy for my web traffic in previous post.&#xA;I write a file server in Go, when attempting to upload a file of approximately 200 MB, it becomes very slow (always uploading) and never succeed. Upon monitoring the server using tools like htop, it seems that the server might be unaware of the incoming large file upload. I come across a error by chance: 413 Request Entity Too Large.</description>
    </item>
    <item>
      <title>Objects &amp; Variables Python</title>
      <link>https://davidzhu.xyz/post/python/basics/001-objects-variables/</link>
      <pubDate>Wed, 29 Nov 2023 14:51:31 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/python/basics/001-objects-variables/</guid>
      <description>1. Objects in Python Everything in Python is an object. Classes, functions, and even simple data types, such as integers, floats, and strings, are objects in Python. When we define an integer in Python, CPython internally creates an object of type integer. These objects are stored in heap memory. Each Python object consists of three fields: Value Type Reference count Let&amp;rsquo;s consider a simple example: 1 a = 100 When</description>
    </item>
    <item>
      <title>Pass by Value or Reference</title>
      <link>https://davidzhu.xyz/post/other/001-pass-by-value-reference/</link>
      <pubDate>Tue, 28 Nov 2023 23:02:06 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/other/001-pass-by-value-reference/</guid>
      <description>1. Python 1 2 3 4 5 6 7 8 9 10 11 12 13 def test_function(x, y): x += 1 y.append(4) def main(): a = 1 b = [2, 3] test_function(a, b) print(&amp;#34;a =&amp;#34;, a) print(&amp;#34;b =&amp;#34;, b) main() Output:&#xA;1 2 a = 1 b = [2, 3, 4] If you pass a mutable object into a method, the method gets a reference to that same object and you can mutate it to your heart&amp;rsquo;s delight, but if you rebind the reference in the method, the outer scope will know nothing about it, and after you&amp;rsquo;re done, the outer reference will still point at the original object.</description>
    </item>
    <item>
      <title>Data Types in Programming Languages</title>
      <link>https://davidzhu.xyz/post/other/001-data-types-programming-language/</link>
      <pubDate>Tue, 28 Nov 2023 20:50:06 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/other/001-data-types-programming-language/</guid>
      <description>Data Types in Programming Languages Programs are collections of instructions that manipulate data to produce a desired result.&#xA;1. Javascript As you have know that javascript is a dynamic language from previous post, which means the values have types, not variables.&#xA;Javascript value types can be categorized into two main categories: objects and primitives. Among these types, the objects are mutable, which means their values can be modified or changed after they are created.</description>
    </item>
    <item>
      <title>Typing in Programming Language</title>
      <link>https://davidzhu.xyz/post/other/000-languge-types-design/</link>
      <pubDate>Tue, 28 Nov 2023 20:30:17 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/other/000-languge-types-design/</guid>
      <description>1. Compiled vs interpreted language Programming languages are for humans to read and understand. The program (source code) must be translated into machine language so that the computer can execute the program. The time when this translation occurs depends on whether the programming language is a compiled language or an interpreted language. Instead of translating the source code into machine language before the executable file is created, an interpreter converts the source code into machine language at the same time the program runs.</description>
    </item>
    <item>
      <title>Typing in Programming Language - Example</title>
      <link>https://davidzhu.xyz/post/other/000-languge-types-practice/</link>
      <pubDate>Tue, 28 Nov 2023 19:20:17 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/other/000-languge-types-practice/</guid>
      <description>Previous post: Typing in Programming Language - David&amp;rsquo;s Blog&#xA;1. Javascript JavaScript is a dynamic language with dynamic types. Variables in JavaScript are not directly associated with any particular value type, and any variable can be assigned (and re-assigned) values of all types:&#xA;1 2 3 let foo = 42; // foo is now a number foo = &amp;#34;bar&amp;#34;; // foo is now a string foo = true; // foo is now a boolean This is in dynamic languages (dynamically typing), values have types, not variables.</description>
    </item>
    <item>
      <title>Promise Object in Javascript</title>
      <link>https://davidzhu.xyz/post/js/basics/002-promise-async-await/</link>
      <pubDate>Tue, 28 Nov 2023 12:34:29 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/js/basics/002-promise-async-await/</guid>
      <description>1. Concurrency models Processes Threads (system or green) Futures Asynchronous operations, non-blocking, single-threaded Coroutines CSP Actor Learn more: java - What&amp;rsquo;s the difference between a Future and a Promise? - Stack Overflow 2. Promise object A wrapper for a resolved value or a reason that it&amp;rsquo;s not resolved yet. But with some powerful methods, allow you handle different situations. Like the then chain, the catch Non-blocking: enable you to write</description>
    </item>
    <item>
      <title>Clawlee Library - Get Started</title>
      <link>https://davidzhu.xyz/post/js/crawler/002-clawlee-get-started/</link>
      <pubDate>Sun, 26 Nov 2023 21:29:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/js/crawler/002-clawlee-get-started/</guid>
      <description>1. An example to feel what it is enqueueLinks: is used to add the links exist in current page to a queue for crawler to process. maxRequestsPerCrawl: control the maximum of requests the crawler can make, you should always set it. headless: set it false, you will see all the actions on browser, browser will click link itself (controlled by your js program). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import { PlaywrightCrawler, Dataset } from &amp;#39;crawlee&amp;#39;; // PlaywrightCrawler crawls the web using a headless // browser controlled by the Playwright library.</description>
    </item>
    <item>
      <title>Basic Concepts</title>
      <link>https://davidzhu.xyz/post/js/crawler/001-basic-concepts/</link>
      <pubDate>Sun, 26 Nov 2023 19:29:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/js/crawler/001-basic-concepts/</guid>
      <description>1. Web crawler A Web crawler, sometimes called a spider or spiderbot and often shortened to crawler, is an Internet bot that systematically browses the World Wide Web and that is typically operated by search engines for the purpose of Web indexing (web spidering). Web crawler&#xA;2. Headless browser A headless browser is a web browser that operates without a graphical user interface (GUI). It runs in the background and interacts with web pages programmatically, just like a regular browser, but without displaying the web page to the user.</description>
    </item>
    <item>
      <title>Exception Handling &amp; Expensive or Not Python</title>
      <link>https://davidzhu.xyz/post/python/basics/004-exception-handling/</link>
      <pubDate>Fri, 24 Nov 2023 09:37:26 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/python/basics/004-exception-handling/</guid>
      <description>1. Basics concepts Try to understand the exception information (Traceback (most recent call last)) :&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def foo(): print(10 * (1 / 0)) def main(): foo() if __name__ == &amp;#34;__main__&amp;#34;: main() Traceback (most recent call last): File &amp;#34;main.py&amp;#34;, line 10, in &amp;lt;module&amp;gt; main() File &amp;#34;main.py&amp;#34;, line 6, in main foo() File &amp;#34;main.py&amp;#34;, line 2, in foo print(10 * (1 / 0)) ZeroDivisionError: division by zero As you can see The last line of the error message indicates what happened: print(10 * (1 / 0)).</description>
    </item>
    <item>
      <title>Yeild &amp; Generator Python</title>
      <link>https://davidzhu.xyz/post/python/basics/003-yield-generator/</link>
      <pubDate>Thu, 23 Nov 2023 16:04:26 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/python/basics/003-yield-generator/</guid>
      <description>1. Definition yield is a keyword that is used like return, but it will make the function return a generator.&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def create_generator(): print(&amp;#34;create_generator&amp;#34;) for i in range(10): yield i ite = create_generator() print(ite) # ite is a generator object for i in ite: print(i) # &amp;lt;generator object create_generator at 0x102d2bdd0&amp;gt; # create_generator # 0 # 1 # 2 When you call a function that contains a yield statement, you get a generator object, but no code runs.</description>
    </item>
    <item>
      <title>排查实验室电脑无法访问一些网站</title>
      <link>https://davidzhu.xyz/post/bugs/008-computer-lab-cannot-access-youtube/</link>
      <pubDate>Wed, 22 Nov 2023 21:43:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/bugs/008-computer-lab-cannot-access-youtube/</guid>
      <description>首先可以联网, 谷歌和微软邮箱等其他的一些网站都可访问, 但是访问油管的时候总是会超时, 首先想到了是 DNS 服务器的问题, 尝试把电脑的 DNS server 改为 8.8.8.8, 可惜需</description>
    </item>
    <item>
      <title>URL Encoding (Percent Encoding)</title>
      <link>https://davidzhu.xyz/post/http/009-url-encoding/</link>
      <pubDate>Mon, 20 Nov 2023 22:29:19 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/009-url-encoding/</guid>
      <description>URLs can only be sent over the Internet using the ASCII character-set. Since URLs often contain characters outside the ASCII set, the URL has to be converted into a valid ASCII format. Percent encoding replaces special characters with a &amp;ldquo;%&amp;rdquo; followed by two hexadecimal digits that represent the character&amp;rsquo;s ASCII code. URLs cannot contain white spaces. URL encoding normally replaces a white space with a plus (+) sign or with</description>
    </item>
    <item>
      <title>MPLS</title>
      <link>https://davidzhu.xyz/post/networking/008-mpls/</link>
      <pubDate>Fri, 17 Nov 2023 08:27:59 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/008-mpls/</guid>
      <description>1. OSPF, BGP and MPLS OSPF: OSPF is an interior gateway protocol (IGP) used for routing within an autonomous system (AS). It determines the best paths for routing packets based on metrics such as bandwidth, delay, and cost. ﻿﻿BGP: BGP is an exterior gateway protocol (EGP) used for routing between autonomous systems. It enables the exchange of routing information between different networks and determines the best paths between ASes. ﻿﻿MPLS: MPLS is not a routing protocol but a forwarding mechanism that operates at the network layer.</description>
    </item>
    <item>
      <title>Coudflare TLS encryption 520 Error Code &amp; too Many Redirections</title>
      <link>https://davidzhu.xyz/post/build-website/008-enable-cloudflare-reverse-proxy/</link>
      <pubDate>Wed, 15 Nov 2023 20:09:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/build-website/008-enable-cloudflare-reverse-proxy/</guid>
      <description>1. Enable end-to-end encryption with Cloudflare Getting a official TLS certificate is too expensive, so I decide to use Cloudflare proxied DNS records enable TLS connection. There is an article talks how it works. There are two steps to add your domain to Cloudflare:&#xA;Add your domain to Cloudflare Create and install TLS certificate to your server Cloudflare does this by serving as a reverse proxy for your web traffic.</description>
    </item>
    <item>
      <title>ChatGPT Bot</title>
      <link>https://davidzhu.xyz/post/python/practice/002-chatgpt-ai-bot-1/</link>
      <pubDate>Tue, 14 Nov 2023 00:07:25 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/python/practice/002-chatgpt-ai-bot-1/</guid>
      <description>1. Official Docs Make request for the RESTful API of OpenAI: API Reference - OpenAI API Error status code for HTTP response: Error codes - OpenAI API Stream cookbook.openai.com/examples/how_to_stream_completions How to Print ChatGPT API Response as a Stream – PuppyCoding Cookbook: https://cookbook.openai.com/ 2. Stream message If you write code like this:&#xA;1 2 3 4 respense = openai.create(...) for chunk in response: if chunk.choices[0].delta.content is not None: print(chunk.choices[0].delta.content, end=&amp;#34;&amp;#34;, flush=True) You probably won&amp;rsquo;t get the result you want, your program will print line by line, not word by word.</description>
    </item>
    <item>
      <title>Virtual Environment Python</title>
      <link>https://davidzhu.xyz/post/python/basics/000-virtual-environment/</link>
      <pubDate>Thu, 09 Nov 2023 19:12:40 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/python/basics/000-virtual-environment/</guid>
      <description>1. Check Python environment 1 2 3 ❯ ls /usr/bin/python* &amp;amp; ls /usr/local/bin/python* /usr/local/bin/python3 /usr/local/bin/python3.10 /usr/bin/python3 /usr/bin belongs to the system. Mess with it at your peril. /usr/local/bin is yours to fool with; if you mess something up in there, you can trash /usr/local and the system will chug along just fine. If you trash /usr/bin, you&amp;rsquo;ll probably end up reinstalling the OS.&#xA;1.1. Multiple versions of Python interpreter As you can see, there are two python3 located at /usr/bin/ and /usr/local/bin/ respectively, and both of these dirs added into the $PATH, so when I input python3 on my terminal, which &amp;quot;python3&amp;quot; will be chosen?</description>
    </item>
    <item>
      <title>My Mac Configuration</title>
      <link>https://davidzhu.xyz/post/other/008-my-mac-config/</link>
      <pubDate>Wed, 08 Nov 2023 22:50:37 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/other/008-my-mac-config/</guid>
      <description>1. iTerm2 1.1. iTerm2 theme settings iTerm2 Preferences: Appearance &amp;gt; General &amp;gt; Theme: Minimal&#xA;iTerm2 Preferences: Advanced&#xA;iTerm2 — Snazzy theme&#xA;1 $ curl -Ls https://raw.githubusercontent.com/sindresorhus/iterm2-snazzy/main/Snazzy.itermcolors &amp;gt; /tmp/Snazzy.itermcolors &amp;amp;&amp;amp; open /tmp/Snazzy.itermcolors Configure iTerm2 color theme: iTerm2 Preferences: Profiles &amp;gt; Colors &amp;gt; Color Presets: Snazzy&#xA;1.2. Install Oh My Zsh and zplug 1 2 3 4 # Oh My Zsh sh -c &amp;#34;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; # zplug brew install zplug .zshrc file:</description>
    </item>
    <item>
      <title>MIME Types</title>
      <link>https://davidzhu.xyz/post/http/001-mime-type/</link>
      <pubDate>Mon, 06 Nov 2023 22:06:07 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/001-mime-type/</guid>
      <description>1. Background When I first started writing backend code, if the server return a file (any type), and I would add a Content-Type header and set its value to application/octet-stream:&#xA;1 2 3 4 w.Header().Set(&amp;#34;Content-Disposition&amp;#34;, &amp;#34;attachment; filename=&amp;#34;+strconv.Quote(info.Name())) w.Header().Set(&amp;#34;Content-Type&amp;#34;, &amp;#34;application/octet-stream&amp;#34;) http.ServeFile(w, r, filePath) return I don&amp;rsquo;t know what does this mean, but it works. Haha, it&amp;rsquo;s not a good habit, so I decide to take some time to learn it.&#xA;2. MIME types A media type (also known as a Multipurpose Internet Mail Extensions or MIME type) indicates the nature and format of a document, file, or assortment of bytes.</description>
    </item>
    <item>
      <title>Intro to gRPC</title>
      <link>https://davidzhu.xyz/post/golang/grpc/001-grpc-basics/</link>
      <pubDate>Sun, 05 Nov 2023 16:01:06 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/grpc/001-grpc-basics/</guid>
      <description>1. Differences between gRPC and REST APIs gRPC utilizes HTTP/2 whereas REST utilizes HTTP 1.1 gRPC utilizes the protocol buffer data format as opposed to the standard JSON data format that is typically used within REST APIs With gRPC you can utilize HTTP/2 capabilities such as server-side streaming, client-side streaming or even bidirectional-streaming should you wish. Source: Go gRPC Beginners Tutorial | TutorialEdge.net&#xA;2. Helloworld 2.1. Intsall protoc and plugins Ptotocol Buffers - David&amp;rsquo;s Blog</description>
    </item>
    <item>
      <title>HTTP 2.0 (Binary Frame, Server Push, Header Compression)</title>
      <link>https://davidzhu.xyz/post/http/004-http-v2-binary-frame/</link>
      <pubDate>Sat, 04 Nov 2023 00:45:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/004-http-v2-binary-frame/</guid>
      <description>Source: Introduction to HTTP/2 | Google Developers&#xA;1. Binary Framing 1.1. Streams, messages, and frames At the core of all performance enhancements of HTTP/2 is the new binary framing layer, which dictates how the HTTP messages are encapsulated and transferred between the client and server.&#xA;The introduction of the new binary framing mechanism changes how the data is exchanged between the client and server. To describe this process, let’s familiarize ourselves with the HTTP/2 terminology:</description>
    </item>
    <item>
      <title>Form Data &amp; Query String</title>
      <link>https://davidzhu.xyz/post/http/008-form-post-query-string/</link>
      <pubDate>Sat, 04 Nov 2023 00:02:19 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/008-form-post-query-string/</guid>
      <description>1. Form data vs query string 1.1. Client side Query string resides in the url:&#xA;1 http://www.blabla.com?a=1&amp;amp;b=2 Form data is sent with the request body. Therefore, when there is sensitive data, we usually put data in the form not the query string. Because the requested URL might show up in Web server logs and browser history/bookmarks which is not a good thing. source&#xA;1.2. Server side 1.2.1. Go web For all requests, ParseForm() parses the raw query from the URL and updates r.</description>
    </item>
    <item>
      <title>HTTP 1.1 vs HTTP 2.0</title>
      <link>https://davidzhu.xyz/post/http/004-http-versions/</link>
      <pubDate>Fri, 03 Nov 2023 22:45:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/004-http-versions/</guid>
      <description>1. HTTP/1.1 The first standardized version of HTTP, HTTP/1.1, was published in early 1997, only a few months after HTTP/1.0.&#xA;HTTP/1.1 clarified ambiguities and introduced numerous improvements:&#xA;A underlying TCP connection could be reused. It no longer needed to be opened multiple times to request the resources embedded in the single original document.&#xA;HTTP keep-alive, a.k.a., HTTP persistent connection, is an instruction that allows a single TCP connection to remain open for multiple HTTP requests/responses.</description>
    </item>
    <item>
      <title>Statically Linking in C</title>
      <link>https://davidzhu.xyz/post/c&#43;&#43;/basics/002-statically-linking/</link>
      <pubDate>Fri, 03 Nov 2023 10:49:20 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/c&#43;&#43;/basics/002-statically-linking/</guid>
      <description>1. Compilation process in C C/C++ programs are built in two main phases (ignore the preprocess, assemble):&#xA;Compilation - produces object code (.obj, .o)&#xA;1 2 # Compile source code into an object file without linking: gcc -c path/to/source.c The extension of the object file in DOS is .obj, and in UNIX, the extension is .o. Linking - produces executable code (.exe or .dll)&#xA;executable file with an extension of exe in DOS and .</description>
    </item>
    <item>
      <title>DNS Spoofing - GFW</title>
      <link>https://davidzhu.xyz/post/networking/005-gfw-dns/</link>
      <pubDate>Tue, 31 Oct 2023 15:29:25 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/005-gfw-dns/</guid>
      <description>声明: 本文只用于学习目的, 请勿用于非法用途. 1. DNS spoofing DNS cache poisoning is the act of entering false information into a DNS cache, so that DNS queries return an incorrect response and users are directed to the wrong websites. DNS cache poisoning is also known as &amp;lsquo;DNS spoofing&amp;rsquo;. 1.1. DNS Caching Learn more about</description>
    </item>
    <item>
      <title>Tools Commonly Used in Networking</title>
      <link>https://davidzhu.xyz/post/networking/006-commands-in-network/</link>
      <pubDate>Tue, 31 Oct 2023 15:23:08 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/006-commands-in-network/</guid>
      <description>1. nslookup 1.1. Query A Record 1 2 3 4 5 6 7 8 # basic DNS lookup $ nslookup google.com Server:&#x9;192.168.2.1 Address:&#x9;192.168.2.1#53 Non-authoritative answer: Name:&#x9;google.com Address: 142.250.81.238 1.2. Reverse DNS look-up 1 2 3 4 5 6 7 8 9 $ nslookup 18.219.46.189 Server:&#x9;192.168.2.1 Address:&#x9;192.168.2.1#53 Non-authoritative answer: 189.46.219.18.in-addr.arpa&#x9;name = ec2-18-219-46-189.us-east-2.compute.amazonaws.com. Authoritative answers can be found from: 46.219.18.in-addr.arpa&#x9;nameserver = ns1-24-us-east-2.ec2-rdns.amazonaws.com. 1.3. Query name server 1 2 3 4 5 6 7 8 $ nslookup -type=ns google.</description>
    </item>
    <item>
      <title>DNS Concepts (NameServer(NS), DNS Records and Caching)</title>
      <link>https://davidzhu.xyz/post/networking/002-dns-basics/</link>
      <pubDate>Tue, 31 Oct 2023 09:50:20 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/002-dns-basics/</guid>
      <description>1. DNS DNS stands for Domain Name System, and it is a distributed hierarchical system that translates human-readable domain names into IP addresses. The process of DNS resolution involves converting a hostname (such as www.example.com) into a computer-friendly IP address (such as 192.168.1.1).&#xA;The main components of the DNS are DNS servers. All DNS servers fall into one of four categories: Recursive resolvers, root nameservers, TLD nameservers, and authoritative nameservers.</description>
    </item>
    <item>
      <title>DHCP Basics</title>
      <link>https://davidzhu.xyz/post/networking/003-dhcp/</link>
      <pubDate>Mon, 30 Oct 2023 23:43:06 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/003-dhcp/</guid>
      <description>1. Concepts Every device on a TCP/IP-based network must have a unique unicast IP address to access the network and its resources. Without DHCP, IP addresses for new computers or computers that are moved from one subnet to another must be configured manually; IP addresses for computers that are removed from the network must be manually reclaimed.&#xA;With DHCP, this entire process is automated and managed centrally. The DHCP server maintains a pool of IP addresses and leases an address to any DHCP-enabled client when it starts up on the network.</description>
    </item>
    <item>
      <title>Common Network Attacks</title>
      <link>https://davidzhu.xyz/post/networking/004-common-attacks/</link>
      <pubDate>Mon, 30 Oct 2023 22:44:57 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/004-common-attacks/</guid>
      <description>1. Man-in-the-middle attack Learn more:&#xA;https://davidzhu.xyz/post/cs-basics/002-ssh/&#xA;HTTPS SSL TLS - David&amp;rsquo;s Blog&#xA;2. DDoS attack Learn more: DDoS Attack - David&amp;rsquo;s Blog&#xA;3. CSRF attack Learn more: CSRF Attack and CORS - David&amp;rsquo;s Blog&#xA;4. SSL stripping SSL stripping attacks, also known as SSL strip, SSL downgrade, or HTTP downgrade attacks, strip the encryption offered by HTTPS, reducing the connection to the less-secure HTTP.&#xA;In order to “strip” the SSL, an attacker intervenes in the redirection of the HTTP to the secure HTTPS protocol and intercepts a request from the user to the server.</description>
    </item>
    <item>
      <title>HTTP Headers (2)</title>
      <link>https://davidzhu.xyz/post/http/001-http-headers-2/</link>
      <pubDate>Mon, 30 Oct 2023 22:06:07 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/001-http-headers-2/</guid>
      <description>1. Strict-Transport-Security Q: Disable HTTP access to the domain, don’t even redirect or link it to SSL. Just inform the users this website is not accessible over HTTP and they have to access it over SSL.&#xA;A: I can&amp;rsquo;t see any technical reason why HTTP needs to be completely blocked either, and many sites do forward HTTP to HTTPS. When doing this it is highly advisable to implement HTTP Strict Transport Security (HSTS) which is a web security mechanism which declares that browsers are to only use HTTPS connections.</description>
    </item>
    <item>
      <title>Some HTTP Issues with Go</title>
      <link>https://davidzhu.xyz/post/golang/practice/007-http-related/</link>
      <pubDate>Sun, 29 Oct 2023 11:30:50 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/practice/007-http-related/</guid>
      <description>1. Parse raw query string 1 2 3 4 5 6 7 8 9 10 func (s *server) ServeHTTP(w http.ResponseWriter, r *http.Request) { // handle asset. const assetPrefix = &amp;#34;asset=&amp;#34; if strings.HasPrefix(r.URL.RawQuery, assetPrefix) { r.URL.RawQuery[len(assetPrefix):] s.asset(w, r, assetName) return } ... } If there are whitespaces in query string, the whitespace will be encoded to %20 or + automatically, js code:&#xA;1 2 3 4 5 6 async function getUrl(filepath) { const filename = &amp;#34;back ground.</description>
    </item>
    <item>
      <title>Tricks in Javascript</title>
      <link>https://davidzhu.xyz/post/js/practice/001-web-dev/</link>
      <pubDate>Sat, 28 Oct 2023 22:54:02 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/js/practice/001-web-dev/</guid>
      <description>1. Delay function 1 2 3 4 5 function delay(minutes) { return new Promise(resolve =&amp;gt; setTimeout(resolve, minutes * 1000 * 60)); } // await delay(2) 2. Click copy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 &amp;lt;p id=&amp;#34;url-text&amp;#34; style=&amp;#34;display: none&amp;#34;&amp;gt;{{.SharedUrl}}&amp;lt;/p&amp;gt; &amp;lt;button onclick=&amp;#34;copyText()&amp;#34;&amp;gt;share&amp;lt;/button&amp;gt; &amp;lt;script&amp;gt; function copyText() { const copyText = document.getElementById(&amp;#34;url-text&amp;#34;); navigator.clipboard.writeText(copyText.textContent) .then(() =&amp;gt; { alert(&amp;#34;successfully copied&amp;#34;); }) .catch(() =&amp;gt; { alert(&amp;#34;something went wrong&amp;#34;); }); } &amp;lt;/script&amp;gt; 3.</description>
    </item>
    <item>
      <title>HTTP Status Codes</title>
      <link>https://davidzhu.xyz/post/http/002-http-status-codes-1/</link>
      <pubDate>Thu, 26 Oct 2023 15:30:05 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/002-http-status-codes-1/</guid>
      <description>2xx 200 OK: Request is okay, entity body contains requested resource. 201 Created: For requests that create server objects (e.g., PUT). The entity body of the response should contain the various URLs for referencing the created resource, with the Location header containing the most specific reference. The server must have created the object prior to sending this status code. Redirect 301: permanent redirect: 可能会修改请求</description>
    </item>
    <item>
      <title>HTTP Headers (1)</title>
      <link>https://davidzhu.xyz/post/http/001-http-headers-1/</link>
      <pubDate>Thu, 26 Oct 2023 09:58:10 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/001-http-headers-1/</guid>
      <description>0. Header types Headers can be grouped according to their contexts:&#xA;Request headers contain more information about the resource to be fetched, or about the client requesting the resource. Response headers hold additional information about the response, like its location or about the server providing it. Representation headers contain information about the body of the resource, like its MIME type, or encoding/compression applied. Payload headers contain representation-independent information about payload data, including content length and the encoding used for transport.</description>
    </item>
    <item>
      <title>CGO Compile Error Building Docker Image</title>
      <link>https://davidzhu.xyz/post/bugs/006-cgo-docker-image-build-error/</link>
      <pubDate>Sat, 21 Oct 2023 10:24:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/bugs/006-cgo-docker-image-build-error/</guid>
      <description>I choose a sqilte3 library which uses cgo, the Dockerfile:&#xA;1 2 3 4 5 6 7 8 FROM golang:alpine WORKDIR /app COPY ./ ./ RUN go mod download RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /server . CMD [&amp;#34;./server&amp;#34;] The CGO_ENABLED=0 is to disable cgo. GOOS=linux and GOARCH=amd64 is used for cross compilation in Go. Because I build this on my macOS arm64 machine, and I want build for Ubuntu amd64 machine, so I choose GOOS=linux GOARCH=amd64.</description>
    </item>
    <item>
      <title>Intros of C Standard Library</title>
      <link>https://davidzhu.xyz/post/c&#43;&#43;/basics/001-standard-library/</link>
      <pubDate>Tue, 17 Oct 2023 17:58:57 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/c&#43;&#43;/basics/001-standard-library/</guid>
      <description>1. ISO the International Organization for Standardization To clarify the relationship between ISO, standards and the standard library, ISO publishes standards, which essentially become the standard library. ISO discusses and develops language standards every year, resulting in standards for languages like C99 and C11. These standards primarily cover two main aspects: the functionality of the language itself and the standard library associated with that language. However, it&amp;rsquo;s important to note</description>
    </item>
    <item>
      <title>DNS Stub and Recursive Resolver - Config Files</title>
      <link>https://davidzhu.xyz/post/networking/002-host-file-dns-stub-resolver/</link>
      <pubDate>Fri, 13 Oct 2023 14:03:57 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/002-host-file-dns-stub-resolver/</guid>
      <description>1. /etc/hosts and /etc/resolv.conf On Linux or a Mac, if you add this to /etc/hosts, facebook no longer exists:&#xA;1 127.0.0.1 facebook.com /etc/hosts is used to resolve hostnames to IP addresses on a local machine. They&amp;rsquo;re looked at first.&#xA;Now&amp;hellip; If you don&amp;rsquo;t have an entry for a host in your host file, you need to ask someone what the IP is. That comes from a resolver.&#xA;2. Local resolver &amp;amp; recursive resolver Recursive resolver usually located at remote acts as a DNS server, whereas, a DNS stub resolver running on client devices.</description>
    </item>
    <item>
      <title>Dockerfile Synatax</title>
      <link>https://davidzhu.xyz/post/docker/003-dockerfile-syntax/</link>
      <pubDate>Wed, 11 Oct 2023 12:27:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/docker/003-dockerfile-syntax/</guid>
      <description>1. WORKDIR 1 WORKDIR /path/to/workdir The WORKDIR instruction sets the working directory for any RUN, CMD, ENTRYPOINT, COPY and ADD instructions that follow it in the Dockerfile. If the WORKDIR doesn&amp;rsquo;t exist, it will be created even if it&amp;rsquo;s not used in any subsequent Dockerfile instruction.&#xA;The WORKDIR instruction can be used multiple times in a Dockerfile. If a relative path is provided, it will be relative to the path of the previous WORKDIR instruction.</description>
    </item>
    <item>
      <title>Docker Architecture</title>
      <link>https://davidzhu.xyz/post/docker/002-docker-architecture/</link>
      <pubDate>Wed, 11 Oct 2023 10:38:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/docker/002-docker-architecture/</guid>
      <description>1. Docker architecture Docker uses a client-server architecture. The Docker client talks to the Docker daemon, which does the heavy lifting of building, running, and distributing your Docker containers. The Docker client and daemon can run on the same system, or you can connect a Docker client to a remote Docker daemon. The Docker client and daemon communicate using a REST API, over UNIX sockets or a network interface.&#xA;Learn more about the Cocker client(docker), Docker daemon(dockerd) and Docker objects (images, containers): https://docs.</description>
    </item>
    <item>
      <title>Static Linking Go Programs</title>
      <link>https://davidzhu.xyz/post/golang/advance/012-statically-linking/</link>
      <pubDate>Tue, 10 Oct 2023 12:09:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/012-statically-linking/</guid>
      <description>Previous post: Statically Linking in C - David&amp;rsquo;s Blog&#xA;1. Static linking on linux Go creates static binaries by default unless you use cgo to call C code, in which case it will create a dynamically linked binary. The easiest way to check if your program is statically compiled is to run file on it.&#xA;standard packages os/user and net use cgo, so importing either (directly or indirectly) will result in a dynamic binary.</description>
    </item>
    <item>
      <title>Cross Compilation - Go</title>
      <link>https://davidzhu.xyz/post/golang/advance/011-cross-compilation/</link>
      <pubDate>Tue, 10 Oct 2023 11:09:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/011-cross-compilation/</guid>
      <description>1. What is cross compilation? Cross-compilation is the process of compiling code for runing on a different OS.&#xA;2. An example There is a question on Stackoverflow:&#xA;It&amp;rsquo;s said that Golang is the compiled language, but what does it mean by compiled? If golang application is compiled to machine code, why can&amp;rsquo;t I just distribute the binary (of course on corresponding arch and platform) instead of go install stuff?&#xA;Once you compile a binary you can distribute it onto machines with the same architecture.</description>
    </item>
    <item>
      <title>Docker Basics</title>
      <link>https://davidzhu.xyz/post/docker/001-docker-basics/</link>
      <pubDate>Mon, 09 Oct 2023 21:09:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/docker/001-docker-basics/</guid>
      <description>1. Dockerfile example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 FROM golang:alpine WORKDIR /app COPY ./ ./ RUN go mod download RUN go build -o server ENTRYPOINT [&amp;#34;./server&amp;#34;] CMD [&amp;#34;-p&amp;#34;, &amp;#34;80&amp;#34;] # docker build [--platform linux/amd64] -t shwezhu/file-server:v1.0 . # [docker push shwezhu/file-server:v1.0] # [docker pull davidzhu/file-server:v1.0] # sudo docker run -d -p 80:80 --rm shwezhu/file-server:v1.0 2. Docker commands 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 # check the output of the program running in the container $ docker logs container_name # volumes, mount the folder on the machine &amp;#39;~/root&amp;#39; to the &amp;#39;/app/root&amp;#39; dir of the container $ docker run --name file-server --rm -d -p 80:80 -v ~/root:/app/root shwezhu/file-server:v1.</description>
    </item>
    <item>
      <title>ufw vs  AWS Security Group</title>
      <link>https://davidzhu.xyz/post/build-website/006-ufw-aws-sg/</link>
      <pubDate>Mon, 09 Oct 2023 13:53:57 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/build-website/006-ufw-aws-sg/</guid>
      <description>1. ufw command 1.1. Commonly used ufw commands 1 2 3 4 5 6 7 # ubuntu @ ip-172-31-12-228 $ sudo ufw status Status: inactive # ubuntu @ ip-172-31-12-228 $ sudo ufw enable Command may disrupt existing ssh connections. Proceed with operation (y|n)? n Aborted Note: use sudo ufw enable carefully, because it may disrupt your ssh connection.&#xA;1 2 3 4 5 6 7 8 9 10 ufw enable: Enables the firewall, which starts enforcing the configured rules.</description>
    </item>
    <item>
      <title>urllib3 not compatible with openssl issue - python</title>
      <link>https://davidzhu.xyz/post/python/practice/003-openssl-issue/</link>
      <pubDate>Sat, 07 Oct 2023 12:01:25 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/python/practice/003-openssl-issue/</guid>
      <description>OpenSSL is an all-around cryptography library that offers an open-source application of the TLS protocol. It allows users to perform various SSL-related tasks, including CSR (Certificate Signing Request) and private keys generation, and SSL certificate installation. You can use OpenSSL&amp;rsquo;s commands to generate, install and manage SSL certificates on various servers. What Is OpenSSL and How Does It Work?&#xA;OpenSSL is a library, so there should be API interfaces. However, the more common use of OpenSSL is as a command-line tool, which can be entered on a computer</description>
    </item>
    <item>
      <title>HTTPS SSL TLS</title>
      <link>https://davidzhu.xyz/post/http/006-https-ssl/</link>
      <pubDate>Sat, 07 Oct 2023 08:30:26 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/006-https-ssl/</guid>
      <description>1. HTTP vs HTTPS Strictly speaking, HTTPS is not a separate protocol, but refers to use of ordinary HTTP over an encrypted SSL/TLS connection.&#xA;Port 80 is typically used for unencrypted HTTP traffic while port 443 is the common port used for encrypted HTTP traffic which is called HTTPS.&#xA;Note that TLS is the successor of SSL, you can simply think they are same thing.&#xA;Source: https://en.wikipedia.org/wiki/HTTPS#Network_layers&#xA;2. What is TLS/SSL SSL (Secure Sockets Layer) and its successor, TLS (Transport Layer Security), are protocols for establishing authenticated and encrypted links between networked computers.</description>
    </item>
    <item>
      <title>Cross-origin Request HTTP</title>
      <link>https://davidzhu.xyz/post/http/003-cors-sop/</link>
      <pubDate>Fri, 06 Oct 2023 20:28:50 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/003-cors-sop/</guid>
      <description>1. CORS issue My frontend application is deployed on http://localhost:5173, and backend application is deployed on http://localhost:8080. The frontend application sends HTTP requests to the backend application through fetch, but it fails with the following error: 1 2 3 4 # 显然没有服务器处理 OPTIONS 请求 Access to fetch at &amp;#39;http://localhost:8080/&amp;#39; from origin &amp;#39;http://localhost:5173&amp;#39; has been blocked by CORS policy: Response to preflight</description>
    </item>
    <item>
      <title>Don&#39;t Defer Close() on Writable Files - Go Notes</title>
      <link>https://davidzhu.xyz/post/golang/advance/010-defer-close/</link>
      <pubDate>Thu, 05 Oct 2023 18:52:56 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/010-defer-close/</guid>
      <description>Why would you get an error from Close() but not an earlier Write() call? To answer that we need to take a brief, high-level detour into the area of computer architecture.&#xA;Generally speaking, as you move outside and away from your CPU, actions get orders of magnitude slower. Writing to a CPU register is very fast. Accessing system RAM is quite slow in comparison. Doing I/O on disks or networks is an eternity.</description>
    </item>
    <item>
      <title>Index and Primary Key</title>
      <link>https://davidzhu.xyz/post/database/mysql/002-index-primary-key/</link>
      <pubDate>Tue, 03 Oct 2023 12:06:36 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/mysql/002-index-primary-key/</guid>
      <description>1. Index concepts Learn more: https://www.oreilly.com/library/view/high-performance-mysql/0596003064/ch04.html&#xA;2. When will index be created Primary Key: By default, when you define a primary key constraint on a column or set of columns using the PRIMARY KEY keyword, MySQL automatically creates an index on that column(s).&#xA;1 2 3 4 5 6 7 # index will created on user_id column create table `user` ( `user_id` smallint not null auto_increment, `username` varchar(20) not null, `password` varchar(20) not null, primary key (`user_id`) ); Unique Constraints: When you define a unique constraint on a column or set of columns using the UNIQUE keyword, MySQL automatically creates an index to enforce uniqueness.</description>
    </item>
    <item>
      <title>Caching &amp; Session Management</title>
      <link>https://davidzhu.xyz/post/database/redis/004-session-vs-cache/</link>
      <pubDate>Mon, 02 Oct 2023 09:37:58 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/redis/004-session-vs-cache/</guid>
      <description>1. Session Session is a server-side state management technique that allows the storage and retrieval of user-specific data across multiple requests. It provides a way to maintain state for individual users during their interaction with a web application. Here are some key points about session:&#xA;Session data is stored on the server, usually in memory or in a session store. Each user is assigned a unique session ID, typically stored as a cookie or in the URL.</description>
    </item>
    <item>
      <title>Caching Strategies and What should be Cached</title>
      <link>https://davidzhu.xyz/post/database/redis/003-caching/</link>
      <pubDate>Sun, 01 Oct 2023 17:56:58 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/redis/003-caching/</guid>
      <description>Previous post: https://davidzhu.xyz/post/database/redis/004-session-vs-cache/&#xA;A paragraph I like, and share it here with you:&#xA;“The real problem is that programmers have spent far too much time worrying about efficiency in the wrong places and at the wrong times; premature optimization is the root of all evil (or at least most of it) in programming.” - Donald Knuth&#xA;Premature optimization is always a disaster. It&amp;rsquo;s not too late to add caching when actual bottlenecks are discovered after deployment or users&amp;rsquo; feedback.</description>
    </item>
    <item>
      <title>Gorilla Sessions RedisStore Source Code Analysis</title>
      <link>https://davidzhu.xyz/post/golang/practice/006-gorilla-redis-store-code/</link>
      <pubDate>Sun, 01 Oct 2023 12:12:50 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/practice/006-gorilla-redis-store-code/</guid>
      <description>To prevent data race, store.Get() always creates a new session (or make a copy) and returns the session to user.&#xA;1 2 3 4 5 6 7 // Get a session. // A copied one or new session. session, _ = store.Get(req, &amp;#34;session-key&amp;#34;) // Add a value. session.Values[&amp;#34;foo&amp;#34;] = &amp;#34;bar&amp;#34; // Save. _ = sessions.Save(req, rsp) Let&amp;rsquo;s check the source code, the Get() method of Redistore:&#xA;1 2 3 func (s *RediStore) Get(r *http.</description>
    </item>
    <item>
      <title>Introduce Redis - In-memory Database</title>
      <link>https://davidzhu.xyz/post/database/redis/001-intro-redis/</link>
      <pubDate>Sun, 01 Oct 2023 10:40:58 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/redis/001-intro-redis/</guid>
      <description>1. Redis data types Redis, an acronym for Remote Dictionary Server, is an open-source, in-memory data structure store. It can be employed as a database, cache, and even a message broker. Unlike traditional databases that read and write data to disk, Redis operates primarily in memory, which is one of the key reasons behind its lightning-fast data retrieval capabilities.&#xA;1.1. String Redis Strings is one of the most versatile of Redis’ building blocks, a binary-safe data structure, binary-safe means the strings in Redis can be any binary data.</description>
    </item>
    <item>
      <title>Useful Redis Commands</title>
      <link>https://davidzhu.xyz/post/database/redis/002-redis-commands/</link>
      <pubDate>Sat, 30 Sep 2023 16:40:58 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/database/redis/002-redis-commands/</guid>
      <description>1. Install &amp;amp; run redis server Install:&#xA;1 $ brew install redis Run Redis in the foreground:&#xA;1 $ redis-server As an alternative to running Redis in the foreground, you can also start the process in the background:&#xA;1 2 3 $ brew services start redis $ brew services stop redis 2. Connect to redis server Once Redis is running, you can connect it by running Redis Command Line Interface - redis-cli:</description>
    </item>
    <item>
      <title>Test &amp; Benchmark - Go</title>
      <link>https://davidzhu.xyz/post/golang/advance/009-benchmark-test/</link>
      <pubDate>Sat, 30 Sep 2023 09:58:56 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/009-benchmark-test/</guid>
      <description>1. Benchmark 1.1. b.N loop Functions of the form&#xA;1 func BenchmarkXxx(*testing.B) are considered benchmarks, and are executed by the go test command when its -bench flag is provided. Benchmarks are run sequentially.&#xA;A sample benchmark function looks like this:&#xA;1 2 3 4 5 func BenchmarkRandInt(b *testing.B) { for i := 0; i &amp;lt; b.N; i++ { rand.Int() } } The benchmark function must run the target code b.N times.</description>
    </item>
    <item>
      <title>Don&#39;t Overuse Channel - Go</title>
      <link>https://davidzhu.xyz/post/golang/advance/008-do-not-overuse-cahnnel/</link>
      <pubDate>Fri, 29 Sep 2023 20:44:55 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/008-do-not-overuse-cahnnel/</guid>
      <description>In previous post we know that don&amp;rsquo;t mediate the access to shared memory with locks and mutexes instead share that memory by communicating. However, is this always true? Sometimes you may want mutex and lock not channels, it depends on the situation. Channel is a way help mutiple groutines communicate with each other. I find some posts and share it here:&#xA;Use a sync.Mutex or a channel?&#xA;One of Go&amp;rsquo;s mottos is &amp;ldquo;Share memory by communicating, don&amp;rsquo;t communicate by sharing memory.</description>
    </item>
    <item>
      <title>Useful Types and Packages for IO - Go</title>
      <link>https://davidzhu.xyz/post/golang/advance/007-io-usages-go/</link>
      <pubDate>Tue, 26 Sep 2023 17:03:55 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/007-io-usages-go/</guid>
      <description>1. bytes &amp;amp; strings packages Package strings implements simple functions to manipulate UTF-8 encoded strings.&#xA;Package bytes implements functions for the manipulation of byte slices. It is analogous to the facilities of the strings package.&#xA;1.1. Make http request When send POST request with json body, you can write code like this:&#xA;1 2 3 4 5 jsonBytes := []byte(`{&amp;#34;username&amp;#34;:&amp;#34;coco&amp;#34;, &amp;#34;password&amp;#34;:&amp;#34;778899a&amp;#34;}`) r, _ := http.NewRequest(&amp;#34;POST&amp;#34;, &amp;#34;/login&amp;#34;, bytes.NewReader(jsonBytes)) r.Header.Set(&amp;#34;Content-Type&amp;#34;, &amp;#34;application/json&amp;#34;) w := httptest.</description>
    </item>
    <item>
      <title>ssh session vary slow</title>
      <link>https://davidzhu.xyz/post/bugs/005-ssh-connection-slow/</link>
      <pubDate>Mon, 25 Sep 2023 14:30:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/bugs/005-ssh-connection-slow/</guid>
      <description>Connecting to my aws server with ssh client is very slow, and after connected, the session is very slow too.&#xA;Like input a command in the ssh session and you have to wait seconds to get the output, lots of latency.&#xA;Then I think maybe there is a &amp;ldquo;bad&amp;rdquo; process which takes a lot of cpu usages makes my server in high load, or there is a high network traffic. Then I use top command to check, then I got this:</description>
    </item>
    <item>
      <title>Parse Form Data in Go Server</title>
      <link>https://davidzhu.xyz/post/golang/practice/005-go-web-2/</link>
      <pubDate>Sat, 23 Sep 2023 18:08:55 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/practice/005-go-web-2/</guid>
      <description>1. Content-Type header The Content-Type header can be application/json, application/x-www-form-urlencoded, multipart/form-data, the first two is usually used with posting form data to server, the third is used to upload file to the server.&#xA;The format of application/json is &#39;{&amp;quot;username&amp;quot;:&amp;quot;davidzhu&amp;quot;, &amp;quot;password&amp;quot;:&amp;quot;778899a&amp;quot;}&#39;.&#xA;The format of application/x-www-form-urlencoded is &amp;quot;username=davidzhu&amp;amp;password=778899a&amp;quot; .&#xA;2. Parse query string and x-www-form-urlencoded data In previous post I have talked that r.ParseForm() will try to parse both query string and request body in Go, but there is a condition: the Content-Type header of the reuqest must be application/x-www-form-urlencoded and you have the correct format data in the request body.</description>
    </item>
    <item>
      <title>HTTP Messages</title>
      <link>https://davidzhu.xyz/post/http/004-http-messages/</link>
      <pubDate>Sat, 23 Sep 2023 09:51:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/004-http-messages/</guid>
      <description>1. Intro of HTTP messages There are two types of messages: requests sent by the client to trigger an action on the server, and responses, the answer from the server. HTTP requests, and responses, share similar structure and are composed of: A start-line describing the requests to be implemented, or its status of whether successful or a failure. This start-line is always a single line. An optional set of HTTP</description>
    </item>
    <item>
      <title>Curl Basics</title>
      <link>https://davidzhu.xyz/post/http/005-curl/</link>
      <pubDate>Fri, 22 Sep 2023 22:58:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/005-curl/</guid>
      <description>1. POST data with Curl The Content-Type header can be application/json, application/x-www-form-urlencoded, multipart/form-data, the first two is usually used with posting form data to server, the third is used to upload file to the server.&#xA;The format of application/json is &#39;{&amp;quot;username&amp;quot;:&amp;quot;davidzhu&amp;quot;, &amp;quot;password&amp;quot;:&amp;quot;778899a&amp;quot;}&#39;.&#xA;The format of application/x-www-form-urlencoded is &amp;quot;username=davidzhu&amp;amp;password=778899a&amp;quot; .&#xA;e.g.,&#xA;POST x-www-form-urlencoded format form data to server:&#xA;1 2 # curl will set the request header to &amp;#39;application/x-www-form-urlencoded&amp;#39; by default curl localhost:8080/hello -d &amp;#34;username=davidzhu&amp;amp;password=778899a&amp;#34; POST json format data with curl:</description>
    </item>
    <item>
      <title>The Router of Go Web App - ServeMux</title>
      <link>https://davidzhu.xyz/post/golang/practice/005-go-web-1/</link>
      <pubDate>Tue, 19 Sep 2023 23:49:55 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/practice/005-go-web-1/</guid>
      <description>This article enlightened by:&#xA;Understanding Mux and Handler concept GopherCon 2019: Mat Ryer - How I Write HTTP Web Services after Eight Years 1. Hello world - 2 ways 1.1. Implementing a Handler Interface - way 1 To run a server, we need to implement http.Handler interface:&#xA;1 2 3 type Handler interface{ ServeHTTP(ResponseWriter, *Request) } To achieve that we need to create an empty struct and provide a method for it:</description>
    </item>
    <item>
      <title>Function Closures - Go</title>
      <link>https://davidzhu.xyz/post/golang/advance/006-closures-go/</link>
      <pubDate>Mon, 18 Sep 2023 23:32:55 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/006-closures-go/</guid>
      <description>Previous post: First-Class Functions - Go - David&amp;rsquo;s Blog&#xA;1. What is closure Go functions may be closures. A closure is a function value that references variables from outside its body. The function may access and assign to the referenced variables; in this sense the function is &amp;ldquo;bound&amp;rdquo; to the variables.&#xA;Closures - A Tour of Go&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 func adder() func(int) (int, *int) { sum := 0 return func(x int) (int, *int) { sum += x return sum, &amp;amp;sum } } func main() { pos, neg := adder(), adder() for i := 1; i &amp;lt;= 3; i++ { sum, addr := pos(i) fmt.</description>
    </item>
    <item>
      <title>git merge vs git rebase</title>
      <link>https://davidzhu.xyz/post/git/010-git-rebase-merge/</link>
      <pubDate>Fri, 15 Sep 2023 10:20:23 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/git/010-git-rebase-merge/</guid>
      <description>In Git, there are two main ways to integrate changes from one branch into another: the merge and the rebase.&#xA;1. fast-forward vs three-way merge There are two type of merge:&#xA;three-way merge, happens when the branches&amp;rsquo; commit have diverged will result a merge commit fast-forward merge, happens when there is a liner structure in the commit history we usually prevent fast-forward merge, because there is no merge commit. can be suppressed with the --no-ff option The liner structure commit structure looks like this:</description>
    </item>
    <item>
      <title>HEAD and Three Trees - Git</title>
      <link>https://davidzhu.xyz/post/git/006-head-three-tress/</link>
      <pubDate>Fri, 15 Sep 2023 10:18:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/git/006-head-three-tress/</guid>
      <description>1. Three trees Git as a system manages and manipulates three trees in its normal operation:&#xA;Tree Role HEAD Last commit snapshot, next parent Index Proposed next commit snapshot Working Directory Sandbox The Git index is a critical data structure in Git. It serves as the “staging area” between the files you have on your filesystem and your commit history. When you run git add, the files from your working directory are hashed and stored as objects in the index, leading them to be “staged changes”.</description>
    </item>
    <item>
      <title>Git Push with force</title>
      <link>https://davidzhu.xyz/post/git/009-push-with-force/</link>
      <pubDate>Thu, 14 Sep 2023 10:00:23 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/git/009-push-with-force/</guid>
      <description>1. git push -f is dangerous The commit history on my local and remote repo are same:&#xA;1 2 second commit first commit Then I added a file docs.md driectly on github and make a commit so there is another new commit history on remote repo which is different form the commit history of my local repo.&#xA;Commit history on remote repo:&#xA;1 2 3 create docs.md second commit first commit Files on remote repo:</description>
    </item>
    <item>
      <title>Wireshark Basics</title>
      <link>https://davidzhu.xyz/post/networking/001-wireshark/</link>
      <pubDate>Wed, 13 Sep 2023 16:52:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/001-wireshark/</guid>
      <description>1. Structure 2. Capture filter 2.1. Selcet netowk interface en0 Physical network interface utun0~4 VIrtual netwrok interface used for tunneling, learn more: Working with TUN Device on MacOS - David&amp;rsquo;s Blog loopback interface: 127.0.0.1 When you run a echo server and client on your local machine, you should select the loopback interface, not the en0 interface. 2.2. Specify filter rules Filter by port and protocol:&#xA;1 port 9000 Wireshark can only capture some specific ports that for HTTP package by default, so if you gonna capture HTTP package, make sure use the correct ports or goto settings to change the default ports.</description>
    </item>
    <item>
      <title>Working with TUN Device on MacOS</title>
      <link>https://davidzhu.xyz/post/networking/007-tun-device-macos/</link>
      <pubDate>Tue, 12 Sep 2023 08:31:59 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/007-tun-device-macos/</guid>
      <description>1. TUN on MacOS On macOS, the utun interface is a type of TUN device specifically designed for VPN connections to handle the network traffic within the VPN tunnel regardless of whether VPN is enabled.&#xA;I&amp;rsquo;ll give you an example to demonstrate the realtionship between TUN device and utun interface, the code below written in Go is to create a TUN device:&#xA;1 2 // New() creates a new TUN/TAP interface using config.</description>
    </item>
    <item>
      <title>虚拟网卡 tun/tap - 阅读转载</title>
      <link>https://davidzhu.xyz/post/other/007-tun-tap-veth-reading/</link>
      <pubDate>Mon, 11 Sep 2023 21:57:37 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/other/007-tun-tap-veth-reading/</guid>
      <description>原文: 云原生虚拟网络 tun/tap &amp;amp; veth-pair - luozhiyun`s Blog 理解 Linux 虚拟网卡设备 tun/tap 的一切 | 骏马金龙 之前的相关文章: TUN Device &amp;amp; utun Interface - David&amp;rsquo;s Blog Tunneling Protocols - David&amp;rsquo;s Blog 1. 物理网卡和虚拟网卡 1.1. 物理网卡</description>
    </item>
    <item>
      <title>string, bytes, runes and characters - Go</title>
      <link>https://davidzhu.xyz/post/golang/basics/003-string-runes-bytes/</link>
      <pubDate>Mon, 11 Sep 2023 13:50:59 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/003-string-runes-bytes/</guid>
      <description>0. Make it eassy This is all this post is going to talk, if you know this, you don&amp;rsquo;t need to go through all this post. a string literal is a slice of bytes: 1 2 3 4 5 6 7 8 func main() { str := &amp;#34;汉&amp;#34; for i:=0; i&amp;lt;len(str); i++{ fmt.Printf(&amp;#34;%x &amp;#34;, str[i]) } } --------------------------- e6 b1</description>
    </item>
    <item>
      <title>Commit Message Guidelines</title>
      <link>https://davidzhu.xyz/post/git/008-concise-commit/</link>
      <pubDate>Mon, 11 Sep 2023 07:47:23 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/git/008-concise-commit/</guid>
      <description>A properly formed git commit subject line should always be able to complete the following sentence:&#xA;If applied, this commit will 1. Things to avoid when creating commits Sending large new features in a single giant commit. Mixing two unrelated functional changes. Again the reviewer will find it harder to identify flaws if two unrelated changes are mixed together. If it becomes necessary to later revert a broken commit, the two unrelated changes will need to be untangled, with further risk of bug creation.</description>
    </item>
    <item>
      <title>HTTPS vs VPN vs Proxy</title>
      <link>https://davidzhu.xyz/post/http/006-https-vpn/</link>
      <pubDate>Sun, 10 Sep 2023 10:54:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/http/006-https-vpn/</guid>
      <description>HTTPS is used for encryption, VPN is too. What&amp;rsquo;s difference?&#xA;In previou post we talked about Is HTTPS Secure Enough?, and we concluded that https is secure itself which means no one can decrypt the data without the session key. However there still are some security issues in HTTPS, the man-in-the-middle attack, for example.&#xA;Why do I need a VPN if https connections are secure? A VPN will secure all of the traffic between point A and point B in a tunnel.</description>
    </item>
    <item>
      <title>Tunneling Protocols</title>
      <link>https://davidzhu.xyz/post/networking/007-tunneling-protocols/</link>
      <pubDate>Sun, 10 Sep 2023 08:27:59 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/007-tunneling-protocols/</guid>
      <description>VPN VPN（Virtual Private Network）的核心特性之一就是使用隧道协议（Tunneling Protocol）。通过这些隧道协议，VPN 能够</description>
    </item>
    <item>
      <title>Basic Configuration of VPS</title>
      <link>https://davidzhu.xyz/post/build-website/005-vps-basic-config/</link>
      <pubDate>Sat, 09 Sep 2023 15:53:57 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/build-website/005-vps-basic-config/</guid>
      <description>1. Login without using keypairs Copy your ssh public key on your computer into the ~/.ssh/authorized_keys file on you EC2 instance. On you local machine: 1 2 $ cat ~/.ssh/id_rsa.pub ... Copy the content into your EC2 instance: 1 $ sudo vi .ssh/authorized_keys Then you can login directly. 2. oh-my-zsh shell 1 2 3 4 5 sudo apt install zsh -y chsh -s /bin/zsh sh -c &amp;#34;$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)&amp;#34;</description>
    </item>
    <item>
      <title>DDoS Attack</title>
      <link>https://davidzhu.xyz/post/networking/004-ddos-attack/</link>
      <pubDate>Sat, 09 Sep 2023 09:29:57 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/004-ddos-attack/</guid>
      <description>1. DDoS attack A distributed denial-of-service (DDoS) attack is a malicious attempt to disrupt the normal traffic of a targeted server, service or network by overwhelming the target or its surrounding infrastructure with a flood of Internet traffic. When a DDoS attack happens, a large volume of traffic is sent to a website. The site under attack typically crashes because the increased traffic exhausts the bandwidth limit or overloads the</description>
    </item>
    <item>
      <title>TUN/TAP Devices</title>
      <link>https://davidzhu.xyz/post/networking/007-tun-tap-device/</link>
      <pubDate>Fri, 08 Sep 2023 17:54:59 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/networking/007-tun-tap-device/</guid>
      <description>1. TUN/TAP Devices In computer networking, TUN and TAP are two different kernel virtual network devices. Though both are for tunneling purposes, TUN and TAP can&amp;rsquo;t be used together because they transmit and receive packets at different layers of the network stack. TUN (network TUNnel) devices are used for IP packet-level tunneling, while TAP (network TAP) devices are used for Ethernet frame-level tunneling.&#xA;A network interface can be a physical device, called network interface controller (NIC), such as an ethernet card or wireless adapter, or a virtual device, such as a TUN or TAP interface.</description>
    </item>
    <item>
      <title>Error handling - Go</title>
      <link>https://davidzhu.xyz/post/golang/basics/007-error-handling/</link>
      <pubDate>Fri, 08 Sep 2023 09:13:06 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/007-error-handling/</guid>
      <description>1.error interface The error type is an interface type. An error variable represents any value that can describe itself as a string.&#xA;1 2 3 type error interface { Error() string } Interface error is a built-in type, as with all other built in types, is predeclared in the universe block. The most commonly-used error implementation is the errors package’s unexported errorString type.&#xA;1 2 3 4 5 6 7 8 // errorString is a trivial implementation of error.</description>
    </item>
    <item>
      <title>Variable Parameter Python</title>
      <link>https://davidzhu.xyz/post/python/basics/002-variable-parameter/</link>
      <pubDate>Thu, 07 Sep 2023 22:51:26 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/python/basics/002-variable-parameter/</guid>
      <description>1. Four types of parameter Default argument Keyword arguments (named arguments) Positional arguments Arbitrary arguments (variable-length arguments *args and **kwargs) 2. Parameters vs arguments 1 2 3 4 5 6 # a and b here are pamameter def my_sum(a, b): # function definition returen a + b # a and 99 are arguments my_sum(1, 99) # function call 3. Positional arguments vs keyword argumentss 1 2 def add(lhs, rhs): ... For this function we have many ways to call it, add(10, 20), add(lhs=10, rhs=20) and add(10, rhs=20),</description>
    </item>
    <item>
      <title>Unit Test Basic Commands - Go</title>
      <link>https://davidzhu.xyz/post/golang/advance/005-unit-test-commands/</link>
      <pubDate>Tue, 05 Sep 2023 15:10:18 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/005-unit-test-commands/</guid>
      <description>1. Useful commands 1 $ go test -run &amp;#34;ExampleSession|TestSession&amp;#34; -v Note that the -run flag is used for specifying test functions, not benchmarks, not fuzz test. Because example test is similar to test function, you can specify both example and test function with -run flag. If you want to specify benchmarks, use -bench flag:&#xA;1 2 3 4 5 6 7 8 9 10 -bench regexp Run benchmarks matching the regular expression.</description>
    </item>
    <item>
      <title>Methods Receivers &amp; Concurrency - Go</title>
      <link>https://davidzhu.xyz/post/golang/basics/004-methods-receivers/</link>
      <pubDate>Sat, 02 Sep 2023 22:18:20 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/004-methods-receivers/</guid>
      <description>1. Different behaviors - pointer and value receiver There are two reasons to use a pointer receiver:&#xA;The first is so that the method can modify the value that its receiver points to.&#xA;The second is to avoid copying the value on each method call. This can be more efficient if the receiver is a large struct, for example.&#xA;&amp;ldquo;the value&amp;rdquo; above refers to an object of the struct, but there is no object in golang, we call all of them value.</description>
    </item>
    <item>
      <title>Backup Blogs with Git - Sovled</title>
      <link>https://davidzhu.xyz/post/git/practice/003-blog-backup/</link>
      <pubDate>Fri, 01 Sep 2023 14:12:50 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/git/practice/003-blog-backup/</guid>
      <description>Problem On github shwezhu.github.io repository I have two branch already, one is master for static html files that is generate web page, another is backup for backup of my hexo themes files and blogs.&#xA;I want backup the hugo theme files with my blog files.&#xA;Solution I&amp;rsquo;m using hugo now but I don&amp;rsquo;t want to override or delete the theme files for hexo, therefore, I cannot just fetch remote branch backup and merge it with my local branch and then push.</description>
    </item>
    <item>
      <title>Shell Script Basic Syntax</title>
      <link>https://davidzhu.xyz/post/linux/002-bash-basics/</link>
      <pubDate>Fri, 01 Sep 2023 12:23:59 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/linux/002-bash-basics/</guid>
      <description>1. Run a script A hello world script:&#xA;1 2 #!/usr/bin/bash echo &amp;#34;hello world&amp;#34; The first here specifies which shell should execute this script, if you don&amp;rsquo;t write, the default shell on your computer will run it, check all the shells on your computer:&#xA;1 2 3 4 5 6 7 8 9 10 11 $ cat /etc/shells # List of acceptable shells for chpass(1). # Ftpd will not allow users to connect who are not using # one of these shells.</description>
    </item>
    <item>
      <title>Write Blog with Hugo &amp; Deploy to Github Pages</title>
      <link>https://davidzhu.xyz/post/build-website/004-hugo/</link>
      <pubDate>Thu, 31 Aug 2023 23:51:57 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/build-website/004-hugo/</guid>
      <description>1. Basic Commands 1 2 3 4 5 6 # create a website $ hugo new site blogs # see your websites locally $ hugo server # generate static html file in public folder $ hugo 2. Deploy to Github Pages 2.1. Local Repository 1 2 3 4 5 6 $ cd blogs/public/ $ git init $ git remote add origin git@github.com:shwezhu/shwezhu.github.io.git ... $ git branch -M master $ git push origin master 2.</description>
    </item>
    <item>
      <title>encoding/gob &amp; encoding/json in Go</title>
      <link>https://davidzhu.xyz/post/golang/basics/009-gob-json-encoding/</link>
      <pubDate>Thu, 31 Aug 2023 11:38:20 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/009-gob-json-encoding/</guid>
      <description>1. Why do we need encoding To transmit a data structure across a network or to store it in a file, it must be encoded and then decoded again. Cause computer just know binary.&#xA;There are many encodings available, of course: JSON, XML, Google’s protocol buffers, and more. And now there’s another, provided by Go’s gob package.&#xA;2. encoding/gob 2.1. Why gob Why define a new encoding? It’s a lot of work and redundant at that.</description>
    </item>
    <item>
      <title>Tricks and Common Mistakes - Go</title>
      <link>https://davidzhu.xyz/post/golang/practice/004-tricks-and-common-mistakes/</link>
      <pubDate>Sun, 27 Aug 2023 17:12:55 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/practice/004-tricks-and-common-mistakes/</guid>
      <description>Tricks remove an element from a slice 1 2 3 // remove the element at index i from a a = append(a[:i], a[i+1:]...) handle close() 1 2 3 4 5 6 7 8 9 10 11 12 13 // credit to: https://gist.github.com/benbjohnson/9eebd201ec096ab6430e1f33411e6427 func doSomething() error { f, err := os.Create(&amp;#34;foo&amp;#34;) if err != nil { return err } // ensure that it&amp;#39;s definitely closed by the end defer f.Close() if _, err := f.</description>
    </item>
    <item>
      <title>Is Multithreaded Server Better than a Single Thread Server?</title>
      <link>https://davidzhu.xyz/post/cs-basics/006-multithread-singlethread-server/</link>
      <pubDate>Sat, 26 Aug 2023 19:03:59 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/cs-basics/006-multithread-singlethread-server/</guid>
      <description>Original: https://qr.ae/pyztor&#xA;Why is a multithreaded web server better than a single thread server? It isn’t.&#xA;There are four basic ways how a web server can handle concurrency:&#xA;forking an OS process per request (like old versions of Apache) spawning an OS thread per request (like a new versions of Apache) using a single-threaded event loop (like nginx) using green threads or lightweight processes scheduled by a VM runtime instead of the OS (like in Erlang) Currently the most common approaches are number 2 and 3.</description>
    </item>
    <item>
      <title>Shell Expansion</title>
      <link>https://davidzhu.xyz/post/linux/003-shell-expansion/</link>
      <pubDate>Sat, 26 Aug 2023 11:30:20 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/linux/003-shell-expansion/</guid>
      <description>1. Shell expansion When the shell receives a command, either from the user typing at the keyboard, or from a shell script, it breaks it up into words. After this happens, the shell performs seven operations on the words, which can change how they are interpreted. There are seven operations are collectively known as &amp;lsquo;shell expansion&amp;rsquo;.&#xA;The seven operations that the shell performs are:&#xA;Brace Expansion - expanding values between braces, such as file{1.</description>
    </item>
    <item>
      <title>Concurrency with Shared Variables</title>
      <link>https://davidzhu.xyz/post/golang/advance/002-concurrency-with-shared-variables/</link>
      <pubDate>Thu, 24 Aug 2023 19:16:59 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/002-concurrency-with-shared-variables/</guid>
      <description>1. Concurrency Safe In a program with two or more goroutines, the steps within each goroutine happen in the familiar order, but in general we don’t know whether an event x in one goroutine happens before an event y in another goroutine, or happens after it, or is simultaneous with it. When we cannot confidently say that one event happens before the other, then the events x and y are concurrent.</description>
    </item>
    <item>
      <title>Goroutines Model</title>
      <link>https://davidzhu.xyz/post/golang/advance/001-why-goroutines/</link>
      <pubDate>Thu, 24 Aug 2023 14:58:18 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/001-why-goroutines/</guid>
      <description>1. Two Styles of Concurrent Programming Go enables two styles of concurrent programming. communicating sequential processes or CSP goroutines and channels shared memory multithreading traditional model multiple threads 2. Goroutines vs OS Threads Creation and Destruction Creating and destroying OS threads requires interacting with the operating system, involving system calls. Go routines managed by Go scheduler, in user space, no system calls. Context Switching needs a full context switch in</description>
    </item>
    <item>
      <title>Goroutine &amp; Channel - Go Basics</title>
      <link>https://davidzhu.xyz/post/golang/basics/008-goroutine-channels/</link>
      <pubDate>Thu, 24 Aug 2023 10:06:10 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/008-goroutine-channels/</guid>
      <description>1. Goroutines When a program starts, its only goroutine is the one that calls the main function, so we call it the main goroutine. The go statement itself completes immediately: 1 2 f() // call f(); wait for it to return go f() // create a new goroutine that calls f(); don&amp;#39;t wait The code below will just print helllo, this because when main function returns, all goroutines are abruptly</description>
    </item>
    <item>
      <title>Pushed a Wrong File to Github - Solved</title>
      <link>https://davidzhu.xyz/post/git/practice/002-pushed-wrong-files/</link>
      <pubDate>Sun, 20 Aug 2023 07:40:57 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/git/practice/002-pushed-wrong-files/</guid>
      <description>问题描述 写完博客把内容 push 到了 GitHub, 发现有个文件 a.txt 不应该被追踪, a.txt 已经被追踪了, 原因分析 首先你可能会想到 直接在本地删除 a.txt commit, 然后 push 就行了, 可是即使这</description>
    </item>
    <item>
      <title>Golang Web - A Simple gptbot with Openai API</title>
      <link>https://davidzhu.xyz/post/golang/practice/003-gptbot/</link>
      <pubDate>Fri, 18 Aug 2023 09:20:57 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/practice/003-gptbot/</guid>
      <description>1. Introduction Source Code: gptbot 2. Database - gorm Don&amp;rsquo;t Open db connection for each request, initialize a global DB and use it for all requests. Close is one of the most misused methods, most application don&amp;rsquo;t need it, be sure you really need it. it is not necessary to close when crash, and you can still Close DB connection in V2. jinzhu - creator of gorm 1 2 3</description>
    </item>
    <item>
      <title>Cookie &amp; Session</title>
      <link>https://davidzhu.xyz/post/cs-basics/005-session-cookie/</link>
      <pubDate>Thu, 17 Aug 2023 07:39:56 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/cs-basics/005-session-cookie/</guid>
      <description>众所周知，HTTP 是一个无状态协议，所以客户端每次发出请求时，下一次请求无法得知上一次请求所包含的状态数据，如何能把一个用户的状态数据关联起</description>
    </item>
    <item>
      <title>Push on Github get Rejected - Solved</title>
      <link>https://davidzhu.xyz/post/git/practice/001-rejected-push-fix-conflicts/</link>
      <pubDate>Tue, 15 Aug 2023 22:18:50 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/git/practice/001-rejected-push-fix-conflicts/</guid>
      <description>Problem GitHub 新建一个 repository, 并选择了自动创建 README.md, 在本地初始化项目后进行push, 报错: 1 2 3 4 5 6 7 8 9 $ git push -u origin master To github.com:shwezhu/gptbot.git ! [rejected] master -&amp;gt; master (fetch first) error: failed to push some refs to &amp;#39;github.com:shwezhu/gptbot.git&amp;#39; hint: Updates were</description>
    </item>
    <item>
      <title>CSRF Filter &amp; ProviderManager &amp; AuthenticationProviders, Spring学习(七)</title>
      <link>https://davidzhu.xyz/post/java/backend/007-spring-security/</link>
      <pubDate>Tue, 08 Aug 2023 20:58:54 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/007-spring-security/</guid>
      <description>{% youtube iJ2muJniikY %} 视频内容位置: Cross Site Request Forgery: 1:16:00 CSRF Spring CSRF Filter 源码分析: 1:22:00 Trace level log 分析: 1:26:00 1 2 3 logging: level: org.springframework.security: TRACE 1:30:35 理论: AuthenticationManager, ProviderManager, AuthenticationProvider Authentication Object stands for either the request to login or the result of a successful login request , 上图中, 如</description>
    </item>
    <item>
      <title>Spring Security Filter Chian 自定义 RobotFilter, Spring学习(六)</title>
      <link>https://davidzhu.xyz/post/java/backend/006-spring-security/</link>
      <pubDate>Mon, 07 Aug 2023 20:58:53 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/006-spring-security/</guid>
      <description>视频介绍 此文章参考视频的 54:35 之后, 用于做笔记, 可直接观看视频: {% youtube iJ2muJniikY %} 关于 authentication object, 可以参考上一篇或者观看视频 33:00, 关于 filter chain, 可参考视频 39:15, 或参考: FIlter Architecture Spring Security</description>
    </item>
    <item>
      <title>Java 8 Optional &amp; Method Reference</title>
      <link>https://davidzhu.xyz/post/java/basics/004-java-optional/</link>
      <pubDate>Sun, 06 Aug 2023 15:44:52 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/basics/004-java-optional/</guid>
      <description>1. Optional Class Java 8 Optional 定义如下: 1 2 3 // A container object which may or may not contain a non-null value. If a value is present, `isPresent()` will return `true` and `get()` will return the value. public final class Optional&amp;lt;T&amp;gt; extends Object 之前讨论的 java.lang.Class, 也是一个类包装器, 若一个函数的返</description>
    </item>
    <item>
      <title>Functional Interfaces &amp; Anonymous Classes &amp; Lambda Expressions - Java</title>
      <link>https://davidzhu.xyz/post/java/basics/003-functional-interfaces/</link>
      <pubDate>Sun, 06 Aug 2023 12:03:53 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/basics/003-functional-interfaces/</guid>
      <description>1. Anonymous Classes Anonymous Class Extending a Class Anonymous Class Implementing an Interface 如何理解呢, 如 Cat cat = new Cat() {...}, 若 Cat 是个类, 那对象 cat 就是个类型为匿名的类, 只不过这个类继承了 Cat , 同理若 Cat 是个接口 interface, 那对象</description>
    </item>
    <item>
      <title>java.lang.Object &amp; java.lang.Class</title>
      <link>https://davidzhu.xyz/post/java/basics/002-reflection-object-class/</link>
      <pubDate>Sat, 05 Aug 2023 19:47:51 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/basics/002-reflection-object-class/</guid>
      <description>1. java.lang.Object 定义: 1 public class Object {...} The java.lang.Object class is the root of the class hierarchy. Every class has Object as a superclass. 所有的类(包括自定义类)都自动继承了类 java.lang.Object, 你可以自己创建个类, 然后查看其对象可调用的方法</description>
    </item>
    <item>
      <title>Java Generics</title>
      <link>https://davidzhu.xyz/post/java/basics/001-generics/</link>
      <pubDate>Sat, 05 Aug 2023 18:44:52 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/basics/001-generics/</guid>
      <description>1. Why Generics? 至于泛型提高类型安全性的话题, 暂不讨论, 这太哲学了, 只举例子, 没有泛型之前, 考虑如何实现一个容器(可以装所有的类型), 提示, 可以用 Object 类</description>
    </item>
    <item>
      <title>Type Safety from Why Rusy - Jim Blandy</title>
      <link>https://davidzhu.xyz/post/cs-basics/004-type-safety/</link>
      <pubDate>Sat, 05 Aug 2023 18:32:53 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/cs-basics/004-type-safety/</guid>
      <description>关于 type safety, 一直没有一个确切的定义, 每个语言的作者对 type safety 可能有不同的理解, 我比较喜欢的是维基百科对 type safety 的定义, 即 type safety 阻止或者使 type errors 不容易发生, 而</description>
    </item>
    <item>
      <title>Java Array</title>
      <link>https://davidzhu.xyz/post/java/basics/000-array/</link>
      <pubDate>Sat, 05 Aug 2023 16:14:53 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/basics/000-array/</guid>
      <description>两点很重要: Arrays are objects in Java, we can find their length using the object property length. This is different from C/C++, where we find length using sizeof(). The length of an array is established when the array is created. After creation, its length is fixed. However, an array reference can be made to point to another array. 数组进行排序的话</description>
    </item>
    <item>
      <title>Spring Security Authentication, Spring学习(五)</title>
      <link>https://davidzhu.xyz/post/java/backend/005-spring-security/</link>
      <pubDate>Fri, 04 Aug 2023 19:16:49 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/005-spring-security/</guid>
      <description>0. 项目结构 1 2 3 4 5 6 7 8 9 10 11 12 └── src ├── main │ ├── java │ │ └── david │ │ └── zhu │ │ ├── SpringSecurityDemoApplication.java │ │ ├── WebController.java │ │ └── WebSecurityConfig.java │ └── resources │ ├── application.yaml</description>
    </item>
    <item>
      <title>Thymeleaf, Spring学习(四)</title>
      <link>https://davidzhu.xyz/post/java/backend/004-thymeleaf/</link>
      <pubDate>Tue, 01 Aug 2023 13:55:48 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/004-thymeleaf/</guid>
      <description>实现功能 访问 http://localhost:8080/ 的时候主页列出所有的猫猫信息(name+age), 可通过参数查找某个猫猫信息如 http://localhost:8080/?name=Max, 如果猫猫Max存在将会列出其信息, 不存在则进行</description>
    </item>
    <item>
      <title>ORM vs JPA vs Hibernate &amp; JDBC vs MySQL Driver, Spring学习(三)</title>
      <link>https://davidzhu.xyz/post/java/backend/003-jpa-hibernate-jdbc/</link>
      <pubDate>Sun, 30 Jul 2023 16:55:47 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/003-jpa-hibernate-jdbc/</guid>
      <description>1. ORM Object-Relational Mapping (ORM) is a technique that lets you query and manipulate data from a database using an object-oriented paradigm. When most people say “ORM” they are referring to the library that implements this technique. Whichever ORM library you choose, they all use the same principles. There are a lot of ORM libraries around here: Java: Hibernate. PHP: Propel or Doctrine (I prefer the</description>
    </item>
    <item>
      <title>Maven的相关概念与常用指令 Spring学习(二)</title>
      <link>https://davidzhu.xyz/post/java/backend/002-maven/</link>
      <pubDate>Sun, 30 Jul 2023 14:11:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/002-maven/</guid>
      <description>1. Install Maven 1.Go to Maven Download site 2.Set Environment Variables 1 2 3 4 5 6 7 8 tar -xvf apache-maven-3.6.3-bin.tar.gz export M2_HOME=&amp;#34;/Users/shaowen/Downloads/Programs/apache-maven-3.9.1&amp;#34; PATH=&amp;#34;${M2_HOME}/bin:${PATH}&amp;#34; export PATH source .bash_profile mvn -version 2. Maven Artifact In Maven terminology, the artifact is the resulting output of the maven build, generally a jar or war or other executable file. Artifacts in maven are identified by a coordinate system of groupId, artifactId, and version.</description>
    </item>
    <item>
      <title>创建Spring Boot项目及踩坑总结 Spring学习(一)</title>
      <link>https://davidzhu.xyz/post/java/backend/001-first-spring-boot-program/</link>
      <pubDate>Sat, 29 Jul 2023 16:47:46 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/001-first-spring-boot-program/</guid>
      <description>错误总结 (1) 所有Java代码都要在java目录下, 即不可删除java目录, 否则, 运行./mvnw clean package报错, 你可以自己试试 1 2 3 4 5</description>
    </item>
    <item>
      <title>Java Packages介绍及使用</title>
      <link>https://davidzhu.xyz/post/java/basics/000-packages/</link>
      <pubDate>Thu, 27 Jul 2023 20:11:43 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/basics/000-packages/</guid>
      <description>Java Packages &amp;amp; API A package is a namespace that organizes a set of related classes and interfaces. Think of it as a folder in a file directory. We use packages to avoid name conflicts, and to write a better maintainable code. Packages are divided into two categories: Built-in Packages (packages from the Java API) User-defined Packages (create your own packages) Built-in Packages The Java API is a library of</description>
    </item>
    <item>
      <title>JDK &amp; JRE</title>
      <link>https://davidzhu.xyz/post/java/basics/jdk-jre/</link>
      <pubDate>Wed, 26 Jul 2023 21:49:41 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/basics/jdk-jre/</guid>
      <description>我的电脑有两个jdk, 一个是我自己下载的jdk17, 一个是电脑预安装的jdk19: 1 2 3 4 5 ls /Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home/ LICENSE bin include legal man README conf jmods lib release ls ~/Downloads/Programs/jdk-17-0-3-1/Home/ LICENSE README bin conf include jmods legal lib release 都</description>
    </item>
    <item>
      <title>手动编译运行Java程序之JVM加载类的顺序</title>
      <link>https://davidzhu.xyz/post/java/basics/how-jvm-find-class/</link>
      <pubDate>Wed, 26 Jul 2023 17:52:40 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/basics/how-jvm-find-class/</guid>
      <description>java &amp;amp; javac 两个指令 Technically, javac is the program that translates Java code into bytecode (.class file) - an intermediate format which is understandable by the Java Virtual Machine (JVM). And java is the program that starts the JVM, which in turn, loads the .class file, verifies the bytecode and executes it. -classpath classpath, or -cp classpath, specifies a list of directories, JAR files, and ZIP archives</description>
    </item>
    <item>
      <title>英语阅读(一)</title>
      <link>https://davidzhu.xyz/post/other/006-english-reading-1/</link>
      <pubDate>Fri, 14 Jul 2023 18:50:37 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/other/006-english-reading-1/</guid>
      <description>These problems were at the forefront of the minds of HTTP/2 developers, That said, unless you are implementing a web server (or a custom client) by working with raw TCP sockets, then you won’t see any difference: all the new, low-level framing is performed by the client and server on your behalf. If you are unable to attend a meeting, you might ask someone to attend</description>
    </item>
    <item>
      <title>备考雅思</title>
      <link>https://davidzhu.xyz/post/other/005-ielts/</link>
      <pubDate>Sun, 02 Jul 2023 20:40:25 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/other/005-ielts/</guid>
      <description>写在前面, 每个人的学习方法都不一样, 我的并不一定适合你, 你要自己通过刷题总结出来适合自己的高效方法, 知乎, 谷歌上有很多相关的文章, 要学会自己</description>
    </item>
    <item>
      <title>npm总是安装package到全局问题 (已解决)</title>
      <link>https://davidzhu.xyz/post/bugs/001-npm-install-locally/</link>
      <pubDate>Tue, 27 Jun 2023 11:24:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/bugs/001-npm-install-locally/</guid>
      <description>使用 npm install xxx, 然后总是安装到 ~/node_modules/, 查了好多, 有的说用 npm config list 查看 global 的值, 改为 false 什么, 都没有用, 卸载 node 和 npm 重装依旧不能解决, 最后删除了 ~/node_modules/ 文件夹和 ~/ 下的所</description>
    </item>
    <item>
      <title>JS 继承之 Prototype Chain 的意义</title>
      <link>https://davidzhu.xyz/post/js/basics/004-prototypal-inheritance/</link>
      <pubDate>Wed, 21 Jun 2023 11:08:32 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/js/basics/004-prototypal-inheritance/</guid>
      <description>1. Objects are values in Javascript {} 就是个空对象, {} 在 Python 里是个 dictionary, 当然 dictionary 也是个对象, 在说继承之前还要提一下 JS 对象与其它语言不同的地方, 举个例子, 1 2 3 4 5 6 7 8 9 10</description>
    </item>
    <item>
      <title>Objects &amp; Collections in Javascript</title>
      <link>https://davidzhu.xyz/post/js/basics/001-javascript-basics/</link>
      <pubDate>Tue, 20 Jun 2023 20:51:31 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/js/basics/001-javascript-basics/</guid>
      <description>1. Javascript objects 在其他语言, 如C++,Java, 对象是一个类的实例(instance), 对象必须由对应类的constructor生成. 可是在JS里面,</description>
    </item>
    <item>
      <title>Collections in Python</title>
      <link>https://davidzhu.xyz/post/python/basics/001-collections/</link>
      <pubDate>Sat, 17 Jun 2023 22:51:31 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/python/basics/001-collections/</guid>
      <description>1. List 1.1. Indexing right to left, use negative number, start from -1&#xA;left to right, use positive number, start form 0&#xA;1 2 3 4 5 arr = [1, 2, 3] print(arr[-1]) # 3 print(arr[0]) # 1 print(arr[:-2]) # [1] print(arr[-4]) # error: out of range 1.2. Reslice makes shallow copy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 cat = { &amp;#34;name&amp;#34;: &amp;#34;Coco&amp;#34;, &amp;#34;age&amp;#34;: 3.</description>
    </item>
    <item>
      <title>ECMAScript vs JavaScript &amp; CommonJS vs ES Modules</title>
      <link>https://davidzhu.xyz/post/js/basics/003-es-vs-js-modules/</link>
      <pubDate>Tue, 13 Jun 2023 10:36:28 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/js/basics/003-es-vs-js-modules/</guid>
      <description>1. ECMAScript vs JavaScript ECMAScript = ES:&#xA;ECMAScript is a Standard for scripting languages. Languages like Javascript are based on the ECMAScript standard. JavaScript = JS:&#xA;JavaScript is the most popular implementation of the ECMAScript Standard. The core features of Javascript are based on the ECMAScript standard, but Javascript also has other additional features that are not in the ECMA specifications/standard. Every browser has a JavaScript interpreter. ES5 = ECMAScript 5:</description>
    </item>
    <item>
      <title>实现ssh免密登陆 ssh如何验证远程主机真实性</title>
      <link>https://davidzhu.xyz/post/cs-basics/002-ssh/</link>
      <pubDate>Sat, 03 Jun 2023 17:14:27 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/cs-basics/002-ssh/</guid>
      <description>1. SSH 应对中间人攻击的方法 SSH 采用了公钥加密, 过程如下： （1）Remote Host 收到用户的登录请求, 把自己的公钥发给用户 （2）用户使用这个公钥, 将登</description>
    </item>
    <item>
      <title>说说编码 - encoding</title>
      <link>https://davidzhu.xyz/post/cs-basics/001-encoding/</link>
      <pubDate>Thu, 01 Jun 2023 22:13:25 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/cs-basics/001-encoding/</guid>
      <description>编码问题很常见, 有时候读文件打开是乱码, 有的语言说自己字符串采用unicode表示字符, 可又来utf-8编码, 这都是什么? 1. 编码和乱码 (unicode vs ascii)</description>
    </item>
    <item>
      <title>用Python脚本给文章中英字符以及符号间加空格</title>
      <link>https://davidzhu.xyz/post/python/practice/001-add-space/</link>
      <pubDate>Thu, 01 Jun 2023 10:41:24 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/python/practice/001-add-space/</guid>
      <description>强迫症, 读博客的时候中英字符或者标点符号后没有空格紧紧的贴在一块看着很不舒服, 于是想着能不能写个脚本来处理一下文章, bash太难用了(是我太</description>
    </item>
    <item>
      <title>Go Scheduler (2)</title>
      <link>https://davidzhu.xyz/post/golang/advance/004-go-scheduler-2/</link>
      <pubDate>Sun, 28 May 2023 18:06:20 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/004-go-scheduler-2/</guid>
      <description>0. Parrallelism is not concurrency Parallelism is about multiple tasks or subtasks of the same task that literally run at the same time on a hardware with multiple computing resources like multi-core processor, while concurrency is about multiple tasks which start, run, and complete in overlapping time periods, in no specific order. 1. Your program starts When your Go program starts up, it’s given a Logical Processor</description>
    </item>
    <item>
      <title>Go Scheduler (1)</title>
      <link>https://davidzhu.xyz/post/golang/advance/003-go-scheduler-1/</link>
      <pubDate>Sun, 28 May 2023 17:48:19 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/advance/003-go-scheduler-1/</guid>
      <description>Source: Scheduling In Go : Part I - OS Scheduler 1. OS scheduler Your program is just a series of machine instructions that need to be executed one after the other sequentially. To make that happen, the operating system uses the concept of a Thread. It’s the job of the Thread to account for and sequentially execute the set of instructions it’s assigned. Execution</description>
    </item>
    <item>
      <title>Hyper-Threading &amp; Physical Threads</title>
      <link>https://davidzhu.xyz/post/cs-basics/006-cpu-architecture/</link>
      <pubDate>Sun, 28 May 2023 15:47:18 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/cs-basics/006-cpu-architecture/</guid>
      <description>1. CPU structure Single core CPU: The CPU core consists of three parts: ALU, CU and Memory (Register + Cache), The multiple cores CPU has more than one core (ALU, CU, Memory (Register + Cache)) to execute instructions: 2. Hyper-threading A single physical core with hyper-threading or simultaneous multithreading technology appears as two logical cores to an operating system. The CPU is still a single CPU, so it’</description>
    </item>
    <item>
      <title>C Go Java Python内存结构及对比</title>
      <link>https://davidzhu.xyz/post/other/001-memory-strucutre-programming-language/</link>
      <pubDate>Sat, 27 May 2023 19:59:17 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/other/001-memory-strucutre-programming-language/</guid>
      <description>1. Javascript Taken from JavaScript | MDN but this applies for all language with GC: Low-level languages like C, have manual memory management primitives such as malloc() and free(). In contrast, JavaScript automatically allocates memory when objects are created and frees it when they are not used anymore (garbage collection). This automaticity is a potential source of confusion: it can give developers the false impression that they don&amp;rsquo;t need to</description>
    </item>
    <item>
      <title>Thread Stack and CPU Cores</title>
      <link>https://davidzhu.xyz/post/cs-basics/006-thread-process/</link>
      <pubDate>Sat, 27 May 2023 18:05:16 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/cs-basics/006-thread-process/</guid>
      <description>1. Thread A thread is a segment or part of a process that executes some tasks of the process. A process can have multiple threads which can run concurrently within the process. Each thread has its own thread stack but multiple threads of a process share a common heap area of that process.&#xA;1.1. Thread stack Each thread has its own call stack, &amp;ldquo;call stack&amp;rdquo; and &amp;ldquo;thread stack&amp;rdquo; are the same thing.</description>
    </item>
    <item>
      <title>Context Switching</title>
      <link>https://davidzhu.xyz/post/cs-basics/006-context-switching/</link>
      <pubDate>Sat, 27 May 2023 16:29:15 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/cs-basics/006-context-switching/</guid>
      <description>1. Context switch In a CPU, the term &amp;ldquo;context&amp;rdquo; refers to the data in the registers and program counter (PC) at a specific moment in time. A register holds the current CPU instruction. A program counter, also known as an instruction address register, is a small amount of fast memory that holds the address of the instruction to be executed immediately after the current one.&#xA;In computing, a context switch is the process of storing the state of a process or thread, so that it can be restored and resume execution at a later point, and then restoring a different, previously saved, state.</description>
    </item>
    <item>
      <title>说说C的编译动态静态库及Go的Runtime</title>
      <link>https://davidzhu.xyz/post/other/003-go-runtime-complie-c/</link>
      <pubDate>Thu, 25 May 2023 18:50:14 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/other/003-go-runtime-complie-c/</guid>
      <description>最近看线程总是看到 goroutine managed by go runtime, &amp;hellip; runtime, 也看到问题 Does Go has a runtime? 刚好Go在官方FAQs有回答, 就在这记录一下, Does Go have a runtime? Go does have an extensive library, called the runtime, that is part of every Go program.</description>
    </item>
    <item>
      <title>Go并发学习之实现一个Worker Pool</title>
      <link>https://davidzhu.xyz/post/golang/practice/002-golang-worker-pools/</link>
      <pubDate>Thu, 25 May 2023 14:13:13 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/practice/002-golang-worker-pools/</guid>
      <description>有人认为Worker Pool在go里是anti-pattern, 不管怎样, 先实现一个简单版本来帮助理解Worker Pool的概念, 实现之前我</description>
    </item>
    <item>
      <title>C&#43;&#43; Operator Overloading</title>
      <link>https://davidzhu.xyz/post/c&#43;&#43;/basics/008-operator-overloading/</link>
      <pubDate>Mon, 22 May 2023 23:03:12 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/c&#43;&#43;/basics/008-operator-overloading/</guid>
      <description>1. Operators as functions Consider the following example: 1 2 3 int x { 2 }; int y { 3 }; std::cout &amp;lt;&amp;lt; x + y &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;; When you see the expression x + y, you can translate this in your head to the function call operator+(x, y) (where operator+ is the name of the function). Now consider what happens if we try to add two objects of a</description>
    </item>
    <item>
      <title>用Go实现一个简单的贪吃蛇</title>
      <link>https://davidzhu.xyz/post/golang/practice/001-snake-game/</link>
      <pubDate>Sat, 20 May 2023 19:59:09 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/practice/001-snake-game/</guid>
      <description>地图 地图就是个二维数组board, 在Go里面叫Slice of slices, 该地图(二维数组)存储bool类型, 定义如下和结构如下: 1 2 3 4 5 6 7 8 9 10 11 12</description>
    </item>
    <item>
      <title>左值和右值</title>
      <link>https://davidzhu.xyz/post/c&#43;&#43;/basics/009-lvalue-rvalue/</link>
      <pubDate>Wed, 17 May 2023 11:27:07 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/c&#43;&#43;/basics/009-lvalue-rvalue/</guid>
      <description>经常看到左值右值, 刚好有讲到, 摘取一些记录在这, 原文: 9.2 — Value categories (lvalues and rvalues) – Learn C++ 1. Rvalue expression vs Lvalue expression 1.1. The properties of an expression To help determine how expressions should evaluate and where they can be used, all expressions in C++ have two properties: a</description>
    </item>
    <item>
      <title>C&#43;&#43; Class Definition Rules</title>
      <link>https://davidzhu.xyz/post/c&#43;&#43;/basics/003-class-definition/</link>
      <pubDate>Tue, 16 May 2023 22:36:06 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/c&#43;&#43;/basics/003-class-definition/</guid>
      <description>Make any member function that does not modify the state of the class object const, so that it can be called by const objects. Default parameters for member functions should be declared in the class definition (in the header file), where they can be seen by whomever #includes the header. For classes used in only one file that aren’t generally reusable, define them directly in the single .cpp file they’re used in.</description>
    </item>
    <item>
      <title>C&#43;&#43; RAII (Resource Acquisition Is Initialization)</title>
      <link>https://davidzhu.xyz/post/c&#43;&#43;/basics/005-raii/</link>
      <pubDate>Tue, 16 May 2023 20:32:04 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/c&#43;&#43;/basics/005-raii/</guid>
      <description>RAII (Resource Acquisition Is Initialization) is a programming technique whereby resource use is tied to the lifetime of objects with automatic duration (e.g. non-dynamically allocated objects). In C++, RAII is implemented via classes with constructors and destructors. A resource (such as memory, a file or database handle, etc…) is typically acquired in the object’s constructor (though it can be acquired after the object is created if that makes sense). That resource can then be used while the object is alive.</description>
    </item>
    <item>
      <title>Lifetime of a Local Variable - Go</title>
      <link>https://davidzhu.xyz/post/golang/basics/002-lifetime-of-variables/</link>
      <pubDate>Mon, 15 May 2023 22:52:03 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/golang/basics/002-lifetime-of-variables/</guid>
      <description>Returns a address of local variable Find codes below:&#xA;1 2 3 4 func f() *int { v := 1 return &amp;amp;v } New to golang from cpp so don&amp;rsquo;t understand why can do this, this is returning a local variable&amp;rsquo;s address 😱. And find a doc talks about this:&#xA;How do I know whether a variable is allocated on the heap or the stack?&#xA;From a correctness standpoint, you don&amp;rsquo;t need to know.</description>
    </item>
    <item>
      <title>C&#43;&#43; Constructors</title>
      <link>https://davidzhu.xyz/post/c&#43;&#43;/basics/004-constructors/</link>
      <pubDate>Mon, 15 May 2023 18:56:01 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/c&#43;&#43;/basics/004-constructors/</guid>
      <description>1. Member initialization list A member initialization list can also be used to initialize members that are classes: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include &amp;lt;iostream&amp;gt; class A { public: explicit A(int x = 0) { std::cout &amp;lt;&amp;lt; &amp;#34;A &amp;#34; &amp;lt;&amp;lt; x &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;; } }; class B { private: A m_a{};</description>
    </item>
    <item>
      <title>未初始化的变量和未定义行为</title>
      <link>https://davidzhu.xyz/post/c&#43;&#43;/basics/007-uninitialized-variables-and-undefined-behaviors/</link>
      <pubDate>Mon, 15 May 2023 09:57:02 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/c&#43;&#43;/basics/007-uninitialized-variables-and-undefined-behaviors/</guid>
      <description>1. Uninitialized variables Uninitialized variables就是你定义它了但是却没有给它赋过值(即通过assignment操作或者initialization操作), 如下a就</description>
    </item>
    <item>
      <title>Java内存结构</title>
      <link>https://davidzhu.xyz/post/java/basics/005-memory-structure/</link>
      <pubDate>Sun, 14 May 2023 21:50:26 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/basics/005-memory-structure/</guid>
      <description>请先阅读(若链接无效可以搜索站内文章): Java中变量(Variables)和引用(References)的区别 - David&amp;rsquo;s Blog 1. JVM Run-Time Data Areas JVN内存结</description>
    </item>
    <item>
      <title>C&#43;&#43; Variable Assignment and Initialization</title>
      <link>https://davidzhu.xyz/post/c&#43;&#43;/basics/006-initialization/</link>
      <pubDate>Sun, 14 May 2023 18:29:32 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/c&#43;&#43;/basics/006-initialization/</guid>
      <description>1. Define 1 2 int x; // define an integer variable named x int y, z; // define two integer variables, named y and z 2. Variable Assignment After a variable has been defined, you can give it a value (in a separate statement) using the = operator. This process is called copy assignment (or just assignment) for short:&#xA;1 2 int width; // define an integer variable named width width = 5; // copy assignment of value 5 into variable width 3.</description>
    </item>
    <item>
      <title>git rm &amp; git restore</title>
      <link>https://davidzhu.xyz/post/git/001-git-basics/</link>
      <pubDate>Fri, 05 May 2023 09:31:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/git/001-git-basics/</guid>
      <description>1. Status Switch Remember that each file in your working directory can be in one of two states: tracked or untracked. Tracked files are files that were in the last snapshot, as well as any newly staged files; they can be unmodified, modified, or staged. In short, tracked files are files that Git knows about. As you edit files, Git sees them as modified, because you’ve changed them since your last commit.</description>
    </item>
    <item>
      <title>Commands Commonly Used in Linux</title>
      <link>https://davidzhu.xyz/post/linux/001-commands-linux/</link>
      <pubDate>Wed, 03 May 2023 12:40:56 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/linux/001-commands-linux/</guid>
      <description>1. Some Commands You can use xxx --help , man xxx, tldr you-command to check the usage of the command.&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 $ nohup ./server -p 8080 &amp;amp; $ zip -r root.zip root $ git log --all --decorate --oneline --graph # &amp;#34;A Dog&amp;#34; $ ls -lh xxx $ file server $ uname -a $ otool # mac only for xxd $ xxd a.</description>
    </item>
    <item>
      <title>正则表达式之关于&#39;(? … )&#39;的困惑</title>
      <link>https://davidzhu.xyz/post/linux/regex/regex-lookaround/</link>
      <pubDate>Tue, 02 May 2023 23:30:28 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/linux/regex/regex-lookaround/</guid>
      <description>最初想筛选以sh结尾但前面没有.的文件, 对应的Regex为(?&amp;lt;!\.)sh$, 但是! 刚开始不知道(?!),(?=),(?&amp;lt;!)</description>
    </item>
    <item>
      <title>grep不支持Negative Lookahead问题</title>
      <link>https://davidzhu.xyz/post/bugs/003-bug-regex-grep-lookahead/</link>
      <pubDate>Tue, 02 May 2023 22:29:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/bugs/003-bug-regex-grep-lookahead/</guid>
      <description>刚开始使用printf &amp;quot;123\n24567\n8930\n234\n&amp;quot; | egrep &#39;(?&amp;lt;!2)3&#39;提示egrep: repetition-operator operand invalid, 然后查到可以使用参数-P, 如下: 1 $ printf &amp;#34;123\n24567\n8930\n234\n&amp;#34; | grep -P &amp;#39;(?&amp;lt;!2)3&amp;#39; 但是仍然报错和上面</description>
    </item>
    <item>
      <title>Regex Basics</title>
      <link>https://davidzhu.xyz/post/linux/regex/regex/</link>
      <pubDate>Mon, 01 May 2023 23:14:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/linux/regex/regex/</guid>
      <description>1. ?, *, ., + + one occurrences of the preceding element * zero occurrence of the preceding element ? zero or one occurrences of the preceding element . matches any single character (exclude newlines) 2. \b To match &amp;ldquo;port&amp;rdquo; and &amp;ldquo;ports&amp;rdquo; but not match &amp;ldquo;export&amp;rdquo;, &amp;ldquo;portable&amp;rdquo;, &amp;ldquo;important&amp;rdquo;, use \bports?\b. Here, \b indicates a boundary, where there cannot be other word characters on either side. Word characters refer to English</description>
    </item>
    <item>
      <title>Spring Boot之何为内嵌Tomcat</title>
      <link>https://davidzhu.xyz/post/java/backend/spring-boot-embedded-tomcat/</link>
      <pubDate>Fri, 28 Apr 2023 15:02:55 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/spring-boot-embedded-tomcat/</guid>
      <description>一直听说Spring Boot内嵌了Tomcat, 然后Spring Boot默认把应用打包为Jar, 这到底意味着什么呢, 为啥不直接用War包部署</description>
    </item>
    <item>
      <title>手动部署War包到Tomcat之何为War</title>
      <link>https://davidzhu.xyz/post/java/backend/war/</link>
      <pubDate>Thu, 27 Apr 2023 21:30:48 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/war/</guid>
      <description>Web application resources or web application archives are commonly called WAR files. A WAR file is used to deploy a Java EE web application in an application server. Inside a WAR file, all the web components are packed into one single unit. These include JAR files, JavaServer Pages, Java servlets, Java class files, XML files, HTML files, and other resource files that we need for web applications. We can use</description>
    </item>
    <item>
      <title>启动Cloudflare代理导致无法通过域名解析出A记录中的IP</title>
      <link>https://davidzhu.xyz/post/bugs/002-bug-domain-with-two-ip/</link>
      <pubDate>Wed, 26 Apr 2023 17:30:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/bugs/002-bug-domain-with-two-ip/</guid>
      <description>问题描述: 这几天弄服务器, 用ssh通过域名连接的时候总是出现超时(域名只有一个A记录即服务器IP), 问题下面是分析思路, I&amp;rsquo;m trying to use ssh to connect my server with</description>
    </item>
    <item>
      <title>What is Jar Package in Java</title>
      <link>https://davidzhu.xyz/post/java/backend/what-is-jar-package-in-java/</link>
      <pubDate>Tue, 25 Apr 2023 15:04:48 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/what-is-jar-package-in-java/</guid>
      <description>JAR stands for Java ARchive. It&amp;rsquo;s a file format based on the popular ZIP file format and is used for aggregating many files into one. Although JAR can be used as a general archiving tool, the primary motivation for its development was so that Java applets and their requisite components (.class files, images and sounds) can be downloaded to a browser in a single HTTP transaction, rather than opening a</description>
    </item>
    <item>
      <title>CLASSPATH &amp; PATH</title>
      <link>https://davidzhu.xyz/post/java/basics/classpath-path-variable/</link>
      <pubDate>Tue, 25 Apr 2023 14:53:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/basics/classpath-path-variable/</guid>
      <description>PATH You should set the PATH variable if you want to be able to run the executables (javac, java, javadoc, and so on) from any directory without having to type the full path of the command. If you do not set the PATH variable, you need to specify the full path to the executable every time you run it, such as: 1 /usr/local/jdk1.7.0/bin/javac MyClass.java 怎么设置PA</description>
    </item>
    <item>
      <title>IDEA项目中的War和War Exploded的区别</title>
      <link>https://davidzhu.xyz/post/java/backend/war-vs-war-exploded/</link>
      <pubDate>Tue, 25 Apr 2023 14:27:35 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/war-vs-war-exploded/</guid>
      <description>在IDEA把webapp deploy到tomcat上的时候会看到以下设置: 上图中选择war或者war exploded的时候, 如果选择前者, on</description>
    </item>
    <item>
      <title>Spring Boot与Spring框架的对比-阅读笔记</title>
      <link>https://davidzhu.xyz/post/java/backend/springboot-vs-spring/</link>
      <pubDate>Tue, 25 Apr 2023 12:30:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/java/backend/springboot-vs-spring/</guid>
      <description>什么是Spring Boot Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can &amp;ldquo;just run&amp;rdquo;. Spring Boot Spring Boot是一个基于Spring的套件，它帮我们预组装了Spring的一系列组件，</description>
    </item>
    <item>
      <title>SSH连接远程主机出现的Connection Refused问题</title>
      <link>https://davidzhu.xyz/post/bugs/004-bug-ssh-connection-refused/</link>
      <pubDate>Sun, 23 Apr 2023 20:30:22 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/bugs/004-bug-ssh-connection-refused/</guid>
      <description>1 2 ssh root@144.202.12.32 ssh: connect to host 144.202.12.32 port 22: Connection refused 查的一些博客说修改mac设置成允许远程连接(这其实是允许别人连接你的mac电脑比如ssh localhost), 还有修改服务器里的配置文</description>
    </item>
    <item>
      <title>部署博客到服务器 - Hexo</title>
      <link>https://davidzhu.xyz/post/build-website/002-hexo-to-remote-server/</link>
      <pubDate>Sun, 23 Apr 2023 19:54:52 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/build-website/002-hexo-to-remote-server/</guid>
      <description>1. 安装Nginx和git (服务器端) 1.1. Installing the Nginx Web Server 1 2 3 4 sudo yum install nginx sudo systemctl enable nginx sudo systemctl start nginx 1.2. Adjusting Firewall Rules Run the following command to permanently enable HTTP connections on port 80: 1 sudo firewall-cmd --permanent --add-service=http To verify that the http firewall service was added</description>
    </item>
    <item>
      <title>域名分级和DNS记录之何为www</title>
      <link>https://davidzhu.xyz/post/build-website/001-domain-name-dns-records/</link>
      <pubDate>Sun, 23 Apr 2023 00:15:30 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/build-website/001-domain-name-dns-records/</guid>
      <description>1. DNS Records: A &amp;amp; CNAME 购买域名后给域名指定的ip地址则要为其添加 A 类型的 DNS Record, 需要指定 HOSTNAME 和 IP, 其中 HOSTNAME 可以填@或者www或blog等自定义, @代表空即不填或</description>
    </item>
    <item>
      <title>git branch</title>
      <link>https://davidzhu.xyz/post/git/002-git-branch/</link>
      <pubDate>Sat, 22 Apr 2023 00:47:50 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/git/002-git-branch/</guid>
      <description>1. Commands used in branch You can use git branch -h to check these commands&amp;rsquo; explanation. List branches: git branch, local, equals to ls ./.git/refs/heads/ git branch -r, remote git branch -a, all you can add -v option, git branch -v -a Check which branch you are on: git status Create branch: git branch &amp;lt;name&amp;gt; Switch branch: git switch &amp;lt;name&amp;gt;, only can switch to the branches on your local repository</description>
    </item>
    <item>
      <title>git fetch - the Essence of &#34;origin&#34;</title>
      <link>https://davidzhu.xyz/post/git/004-git-fetch-origin/</link>
      <pubDate>Fri, 21 Apr 2023 21:46:44 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/git/004-git-fetch-origin/</guid>
      <description>1. git fetch The git fetch command downloads commits, files, and refs from a remote repository into your local repo. Fetching is what you do when you want to see what everybody else has been working on. Git isolates fetched content from existing local content; it has absolutely no effect on your local development work.&#xA;Fetch all of the branches from the repository. This also downloads all of the required commits and files from the other repository.</description>
    </item>
    <item>
      <title>useEffect Hook in React</title>
      <link>https://davidzhu.xyz/post/frontend/react/002-use-effect-hook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://davidzhu.xyz/post/frontend/react/002-use-effect-hook/</guid>
      <description>为什么 useEffect 不能是异步函数 异步函数隐式地返回一个Promise，而useEffect的设计是期望返回一个清理函数或者什么都不返回（undefin</description>
    </item>
  </channel>
</rss>
